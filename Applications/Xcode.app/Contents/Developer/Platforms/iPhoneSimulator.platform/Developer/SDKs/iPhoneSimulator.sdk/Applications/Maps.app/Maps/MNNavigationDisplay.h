//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "MKMapViewDelegate.h"

@class GEOLocationShifter, GEOMapRegion, GEORouteMatch, GEOStep, MKMapView, MKPolygonRenderer, MNCameraController, MNCircleAnnotation, MNLocation, NSMutableArray, NSString, UserLocationView;

__attribute__((visibility("hidden")))
@interface MNNavigationDisplay : NSObject <MKMapViewDelegate>
{
    id <MNNavigationDisplayDelegate> _delegate;
    MKMapView *_mapView;
    MNCameraController *_cameraController;
    long long _desiredMapMode;
    UserLocationView *_userLocationAnnotationView;
    id <MKAnnotation> _destinationAnnotation;
    NSMutableArray *_userLocationHistory;
    NSMutableArray *_rawUserLocationHistory;
    NSMutableArray *_matchedUserLocationHistory;
    GEOStep *_currentAnnotatedStep;
    MNCircleAnnotation *_maneuverStartAnnotation;
    MNCircleAnnotation *_maneuverEndAnnotation;
    MNCircleAnnotation *_maneuverFirstAnnounceAnnotation;
    NSMutableArray *_maneuverSubstepAnnotations;
    MKPolygonRenderer *_mapRegionOverlay;
    GEOMapRegion *_destinationMapRegion;
    long long _previousMainLoopRate;
    long long _originalMainLoopRate;
    int _sky;
    MNLocation *_matchedLocation;
    GEOLocationShifter *_locationShifter;
    _Bool _onRoute;
    _Bool _pouncing;
}

@property(nonatomic) _Bool onRoute; // @synthesize onRoute=_onRoute;
@property(nonatomic) int sky; // @synthesize sky=_sky;
@property(retain, nonatomic) GEOMapRegion *destinationMapRegion; // @synthesize destinationMapRegion=_destinationMapRegion;
@property(nonatomic) long long desiredMapMode; // @synthesize desiredMapMode=_desiredMapMode;
@property(retain, nonatomic) MNLocation *matchedLocation; // @synthesize matchedLocation=_matchedLocation;
@property(retain, nonatomic) UserLocationView *userLocationAnnotationView; // @synthesize userLocationAnnotationView=_userLocationAnnotationView;
@property(retain, nonatomic) id <MKAnnotation> destinationAnnotation; // @synthesize destinationAnnotation=_destinationAnnotation;
@property(retain, nonatomic) MKMapView *mapView; // @synthesize mapView=_mapView;
@property(nonatomic) __weak id <MNNavigationDisplayDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)setTracePlaybackSpeedMultiplier:(double)arg1;
@property(readonly, nonatomic) GEORouteMatch *currentRouteMatch;
- (id)mapViewCurrentRouteMatch:(id)arg1;
- (void)mapView:(id)arg1 canZoomOutDidChange:(_Bool)arg2;
- (void)mapView:(id)arg1 canZoomInDidChange:(_Bool)arg2;
- (void)mapView:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)mapView:(id)arg1 didBecomePitched:(_Bool)arg2;
- (void)mapView:(id)arg1 didChangeUserTrackingMode:(long long)arg2 animated:(_Bool)arg3 fromTrackingButton:(_Bool)arg4;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (id)mapView:(id)arg1 rendererForOverlay:(id)arg2;
- (void)mapViewDidStopUserInteraction:(id)arg1;
- (void)mapViewDidStartUserInteraction:(id)arg1;
- (void)updateCameraContext:(id)arg1 location:(id)arg2;
- (void)_addDebugLocationAnnotationMatchedLocation:(id)arg1;
- (void)updateDebugStepAnnotation:(unsigned long long)arg1 route:(id)arg2;
- (void)_addLocationAnnotation:(id)arg1 history:(id)arg2;
- (void)clearDebugAnnotations;
- (void)_clearDebugStepAnnotations;
- (void)clearAllAnnotations;
- (void)setCameraPanStyle:(int)arg1;
@property(nonatomic) double zoomScale;
@property(nonatomic) double userZoom;
- (void)setUserZoomRangeWithMinZoom:(double)arg1 maxZoom:(double)arg2;
- (void)pauseCameraMotion;
- (void)stopCameraMotion;
- (void)startMotionWithCameraContext:(id)arg1 animated:(_Bool)arg2;
- (void)refreshCameraContext:(id)arg1 location:(id)arg2;
- (void)updateRoadDescription:(id)arg1;
- (void)_updateMapRegionOverlay;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setUserLocationAnnotationMarker:(id)arg1;
- (void)updateSky;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

