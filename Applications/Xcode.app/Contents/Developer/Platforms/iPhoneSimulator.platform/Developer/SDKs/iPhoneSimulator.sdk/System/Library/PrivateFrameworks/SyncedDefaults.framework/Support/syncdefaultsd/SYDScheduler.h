//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSData, NSError, NSHTTPURLResponse, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSURL, NSURLRequest, SYDAccount, SYDBackgroundScheduler, SYDGlobalScheduling, SYDNetworkStateManager, SYDSchedulerPushManager, SYDSchedulingParameters, SYDServer, SYDURLConnection;

@interface SYDScheduler : NSObject
{
    NSString *_identifier;
    SYDServer *_server;
    SYDAccount *_account;
    NSString *_lastKnownUser;
    _Bool _wasDisabledLastTime;
    NSMutableSet *_appsQueue;
    _Bool _isSynchronizing;
    _Bool _hadASuccessfulSync;
    _Bool _wantsToSyncNow;
    _Bool _needsToEndTransaction;
    unsigned long long _syncIdentifier;
    _Bool _isSyncCancelled;
    NSMutableSet *_cancelledApps;
    NSMutableDictionary *_syncWithTrackingRequests;
    NSMutableArray *_pendingSyncRequests;
    _Bool _willStartSynchronizingSoon;
    double _nextSoonSynchronization;
    NSURL *_lastSeenPrimaryURL;
    NSURL *_redirectedURL;
    unsigned long long _redirectCount;
    SYDSchedulingParameters *_parameters;
    SYDGlobalScheduling *_scheduling;
    double _minimalDelayedTime;
    double _lastRequestForConfig;
    NSString *_lastModifiedHeaderForConfig;
    SYDSchedulerPushManager *_pushManager;
    SYDNetworkStateManager *_networkStateManager;
    SYDBackgroundScheduler *_backgroundScheduler;
    unsigned long long _backgroundRescheduleCount;
    double _nextScheduledUpdate;
    double _lastPushNotification;
    double _lastSynchronization;
    double _lastBurstStart;
    unsigned long long _lastBurstCount;
    NSURLRequest *_lastRequest;
    NSHTTPURLResponse *_lastResponse;
    NSData *_lastData;
    NSError *_lastError;
    NSError *_sessionError;
    _Bool _usesSyncIndicator;
    double _syncIndicatorStart;
    _Bool _tracksAllChanges;
    struct __asl_object_s *aslClient;
    unsigned long long _transactionCount;
    _Bool _isIdle;
    _Bool _isWaitingToIdle;
    _Bool _disableThrottling;
    SYDURLConnection *_currentConnection;
    _Bool _tracksUsage;
    NSMutableDictionary *_usagePerDisplayIdentifier;
    NSMutableDictionary *_sessionUsagePerDisplayIdentifier;
}

+ (Class)pushManagerClass;
+ (Class)parametersClass;
+ (Class)accountClass;
@property(readonly, nonatomic) _Bool isWaitingToIdle; // @synthesize isWaitingToIdle=_isWaitingToIdle;
@property(readonly, nonatomic) _Bool isIdle; // @synthesize isIdle=_isIdle;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) SYDGlobalScheduling *scheduling; // @synthesize scheduling=_scheduling;
@property(readonly, nonatomic) SYDSchedulingParameters *parameters; // @synthesize parameters=_parameters;
@property(nonatomic) _Bool tracksUsage; // @synthesize tracksUsage=_tracksUsage;
@property(nonatomic) _Bool disableThrottling; // @synthesize disableThrottling=_disableThrottling;
@property(nonatomic) _Bool tracksAllChanges; // @synthesize tracksAllChanges=_tracksAllChanges;
@property(nonatomic) _Bool usesSyncIndicator; // @synthesize usesSyncIndicator=_usesSyncIndicator;
@property(nonatomic) SYDServer *server; // @synthesize server=_server;
- (void)logChange:(id)arg1 forBundleIdentifier:(id)arg2 changeCount:(long long)arg3;
@property(nonatomic, getter=isFileLoggingEnabled) _Bool fileLoggingEnabled;
@property(nonatomic, getter=isLoggingEnabled) _Bool loggingEnabled;
- (id)description;
- (void)resetUsage;
- (void)updateUsageDictionary:(id *)arg1;
- (id)usageDescription;
- (void)_stopTrackingChanges;
- (void)_startTrackingChanges;
- (void)_stopShowingIndicator;
- (void)_startShowingIndicator;
- (void)_storeLastRequest:(id)arg1 response:(id)arg2 data:(id)arg3 error:(id)arg4;
- (id)limitsDescription;
- (id)lastRequestDescription;
- (id)statusDescription;
- (void)refetchConfiguration;
- (void)resetUpdates;
- (void)_resetUpdatesForceSynchronization:(_Bool)arg1;
- (void)resetIdling;
- (void)endTransaction;
- (void)beginTransaction;
- (void)_forgetIdling;
- (void)shutdownWithHandler:(CDUnknownBlockType)arg1;
- (void)_didRescheduleAsUsual;
- (void)_didRescheduleEarly;
- (double)_rescheduleMinimalDelayWithNow:(double)arg1;
- (void)_idling;
- (void)resetAllApplications;
- (void)cancelSyncForApplications:(id)arg1;
- (void)cancelSync;
- (void)unscheduleApplication:(id)arg1;
- (void)synchronizeApplicationsSimilarToApplication:(id)arg1;
- (void)synchronizeApplicationsWithServerSoon:(id)arg1 reason:(int)arg2;
- (void)synchronizeApplicationsWithServerSoon:(id)arg1 reason:(int)arg2 message:(id)arg3 description:(id)arg4;
- (void)synchronizeApplicationsWithServerNow:(id)arg1 reason:(int)arg2;
- (void)synchronizeApplicationsWithServerNow:(id)arg1 reason:(int)arg2 description:(id)arg3;
- (void)setApplicationNeedsToSynchronizeSoon:(id)arg1 reason:(int)arg2;
- (void)_networkTypeDidChange;
- (void)_networkStateDidChange;
- (void)_receivedPushNotification:(id)arg1;
- (void)_receivedSimulatedPushNotification:(id)arg1;
- (void)_shouldUpdateTokenOnServer;
- (void)_accountDidChange;
- (int)_updateAccountRelatedManagers;
- (void)_startSynchronizationIfPossible;
- (void)_sendConfigRequestWithCredentials:(id)arg1;
- (void)_sendSetAPNSRequestWithCredentials:(id)arg1;
- (void)_sendSyncRequestWithCredentials:(id)arg1;
- (void)_didUsePropertyList:(id)arg1 forOutput:(_Bool)arg2 forDisplayIdentifier:(id)arg3;
- (void)_addUsage:(unsigned long long)arg1 forKey:(id)arg2 forDisplayIdentifier:(id)arg3;
- (void)_addUsage:(unsigned long long)arg1 forKey:(id)arg2 forDisplayIdentifier:(id)arg3 usingUsageDictionary:(id)arg4;
- (unsigned long long)_usageForKey:(id)arg1 forDisplayIdentifier:(id)arg2 usingUsageDictionary:(id)arg3;
- (void)_serviceUnavailableWithDuration:(double)arg1;
- (void)_cancelPlannedSynchronization;
- (void)_startSynchronizationSoon;
- (void)_scheduleNextPollingSynchronization;
- (void)_synchronizeAllApps;
- (void)_sendHTTPRequest:(id)arg1 withCredentials:(id)arg2 synchronizingApps:(id)arg3;
- (id)_newRequestToServerWithPath:(id)arg1 body:(id)arg2 credentials:(id)arg3;
- (void)sendAsynchronousRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_processSyncResponse:(id)arg1 forSynchronizingApps:(id)arg2;
- (void)_rescheduleSyncWithTrackingRequest;
- (void)_endSyncWithTrackingRequestWithError:(id)arg1;
- (void)endSyncWithTrackingRequestForBundleIndentifier:(id)arg1 error:(id)arg2;
- (void)_beginSyncWithTrackingForApps:(id)arg1 reason:(int)arg2 message:(id)arg3;
- (void)_addPendingSyncRequest:(id)arg1;
- (void)_schedulePendingSyncRequests;
- (_Bool)_hasPendingTrackingMessages;
- (_Bool)_useAlternateHost:(id)arg1;
- (void)_endSynchronizationWithRemainingApps:(id)arg1;
- (void)_resetBurstStart;
- (_Bool)_needsToDoSomeUpdateWithServerNow:(double)arg1;
- (_Bool)_addAppsToQueue:(id)arg1 reason:(int)arg2 now:(double)arg3;
- (_Bool)_addAppToQueue:(id)arg1 reason:(int)arg2 now:(double)arg3;
- (double)_pollingInterval;
- (long long)_maximumAppsPerRequest;
- (double)_reasonnableConfigurationUpdateInterval;
- (double)_configurationUpdateInterval;
- (void)_otherSchedulerDidUpdateConfigurationDictionary:(id)arg1;
- (id)configuration;
- (id)persistentState;
- (void)revalidateAccount;
- (void)awake;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 andPersistentState:(id)arg2 globalPushManager:(id)arg3;

@end

