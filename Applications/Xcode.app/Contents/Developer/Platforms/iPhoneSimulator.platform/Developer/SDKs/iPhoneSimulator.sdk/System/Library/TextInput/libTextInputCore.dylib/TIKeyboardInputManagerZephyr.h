//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <TextInputCore/TIKeyboardInputManager.h>

#import "TIRevisionHistoryDelegate.h"

@class CPLRUDictionary, NSMutableString, NSString, TIAutoshiftRegularExpressionLoader, TIKeyboardInputManagerConfig, TIRevisionHistory, TITextCheckerExemptions;

@interface TIKeyboardInputManagerZephyr : TIKeyboardInputManager <TIRevisionHistoryDelegate>
{
    struct TIInputManagerZephyr *m_impl;
    NSMutableString *m_composedText;
    unsigned long long m_initialSelectedIndex;
    struct shared_ptr<KB::TypologyLogger> m_typology_recorder;
    _Bool _isEditingWordPrefix;
    _Bool _wordLearningEnabled;
    TIKeyboardInputManagerConfig *_config;
    CPLRUDictionary *_autocorrectionHistory;
    CPLRUDictionary *_rejectedAutocorrections;
    CPLRUDictionary *_autocorrectionsSuggestedForCurrentInput;
    TITextCheckerExemptions *_textCheckerExemptions;
    struct USet *_acceptableCharacterSet;
    TIRevisionHistory *_revisionHistory;
    TIAutoshiftRegularExpressionLoader *_autoshiftRegexLoader;
}

@property(retain, nonatomic) TIAutoshiftRegularExpressionLoader *autoshiftRegexLoader; // @synthesize autoshiftRegexLoader=_autoshiftRegexLoader;
@property(nonatomic, getter=isWordLearningEnabled) _Bool wordLearningEnabled; // @synthesize wordLearningEnabled=_wordLearningEnabled;
@property(readonly, nonatomic) TIRevisionHistory *revisionHistory; // @synthesize revisionHistory=_revisionHistory;
@property(readonly, nonatomic) struct USet *acceptableCharacterSet; // @synthesize acceptableCharacterSet=_acceptableCharacterSet;
@property(readonly, nonatomic) TITextCheckerExemptions *textCheckerExemptions; // @synthesize textCheckerExemptions=_textCheckerExemptions;
@property(nonatomic) _Bool isEditingWordPrefix; // @synthesize isEditingWordPrefix=_isEditingWordPrefix;
@property(readonly, nonatomic) CPLRUDictionary *autocorrectionsSuggestedForCurrentInput; // @synthesize autocorrectionsSuggestedForCurrentInput=_autocorrectionsSuggestedForCurrentInput;
@property(readonly, nonatomic) CPLRUDictionary *rejectedAutocorrections; // @synthesize rejectedAutocorrections=_rejectedAutocorrections;
@property(readonly, nonatomic) CPLRUDictionary *autocorrectionHistory; // @synthesize autocorrectionHistory=_autocorrectionHistory;
@property(readonly, nonatomic) TIKeyboardInputManagerConfig *config; // @synthesize config=_config;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)installTypologyTraceLogger;
- (_Bool)acceptsRange:(struct _NSRange)arg1 inString:(id)arg2;
- (_Bool)acceptsCharacter:(unsigned int)arg1;
- (struct USet *)createAcceptableCharacterSet;
- (long long)keyHitTest:(id)arg1;
- (void)registerKeyArea:(struct CGRect)arg1 keyCode:(short)arg2 keyString:(const char *)arg3;
- (void)clearKeyAreas;
- (_Bool)needsKeyHitTestResults;
- (_Bool)canHandleKeyHitTest;
- (unsigned long long)initialSelectedIndex;
- (id)candidateResultSet;
- (id)autocorrectionList;
- (id)extendedAutocorrection:(id)arg1 spanningInputsForCandidates:(id)arg2;
- (id)topCandidate;
- (id)completionCandidates;
- (id)autocorrectionListForEmptyInputWithDesiredCandidateCount:(unsigned long long)arg1;
- (id)indexesOfDuplicatesInCandidates:(id)arg1;
- (id)predictionCandidates;
- (_Bool)shouldAutocapitalizePredictionAfterSpace;
- (_Bool)shouldGenerateSuggestionsForSelectedText;
- (void)reconcileCandidates:(vector_566bf209 *)arg1 forTypedString:(struct String *)arg2 withPhraseCandidate:(struct Candidate *)arg3 replacing:(const struct String *)arg4;
- (id)autocorrectionListForSelectedText;
- (id)cannedResponseCandidatesForString:(id)arg1;
- (id)cannedResponsesToString:(id)arg1;
- (_Bool)shouldAllowContextTokenID:(unsigned int)arg1;
- (_Bool)shouldDropInputStem;
- (_Bool)suggestionBlacklistMatchesStrings:(id)arg1;
- (id)candidatesForString:(id)arg1;
- (_Bool)usesRetrocorrection;
- (_Bool)usesCandidateSelection;
- (id)shortcutConversionForInput:(id)arg1 andExistingString:(id)arg2 existingStringStartsInMiddleOfWord:(_Bool)arg3;
- (id)shortcutConversionForString:(id)arg1 stringStartsInMiddleOfWord:(_Bool)arg2;
- (id)shortcutConversionForDocumentState:(id)arg1;
- (id)shortcutCompletionsForDocumentState:(id)arg1;
- (struct _NSRange)shortcutSearchRangeForString:(id)arg1;
- (_Bool)shouldSkipShortcutConversionForDocumentState:(id)arg1;
- (void)enumerateWordSuffixesOfString:(id)arg1 inRange:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (unsigned long long)maximumShortcutLengthAllowed;
- (_Bool)supportsShortcutConversion;
- (id)terminatorsPrecedingAutospace;
- (id)terminatorsDeletingAutospace;
- (id)terminatorsPreventingAutocorrection;
- (id)autocorrectionCandidateForInput:(id)arg1 withCandidate:(const struct Candidate *)arg2 insertingSpace:(_Bool)arg3 sharedPrefixLength:(unsigned long long)arg4;
- (id)autocorrectionCandidateForInput:(id)arg1 withCandidate:(const struct Candidate *)arg2;
- (id)autocorrection;
- (_Bool)isEditingExistingWord;
- (id)phraseCandidateCompletedByWord:(const struct String *)arg1 allowNoSuggest:(_Bool)arg2;
- (unsigned long long)prefixLengthOfInput:(id)arg1 sharedWithCandidates:(const vector_566bf209 *)arg2;
- (unsigned long long)prefixLengthOfInput:(id)arg1 sharedWithCandidate:(const struct Candidate *)arg2;
- (void)checkAutocorrectionDictionaries;
- (void)setAutoshiftFromInputContext;
- (_Bool)canStartSentenceAfterString:(id)arg1;
- (_Bool)spaceAndNextInputWouldStartSentence;
- (_Bool)nextInputWouldStartSentence;
- (_Bool)nextInputWouldStartSentenceAfterInput:(id)arg1;
- (id)sentenceTrailingCharacters;
- (id)sentenceDelimitingCharacters;
- (id)sentencePrefixingCharacters;
- (id)wordCharacters;
- (id)nonstopPunctuationCharacters;
- (_Bool)shouldAddModifierSymbolsToWordCharacters;
- (id)shadowTyping;
- (void)updateForRevisitedString:(id)arg1;
- (id)autocorrectionRecordForWord:(id)arg1;
- (void)recordRejectedAutocorrectionForAcceptedText:(id)arg1;
- (void)recordAcceptedAutocorrection:(id)arg1;
- (void)recordSuggestedAutocorrection:(id)arg1;
- (void)candidateRejected:(id)arg1;
- (_Bool)shouldExpectSentenceBoundaryAfterContext:(const unsigned int *)arg1 contextLength:(unsigned long long)arg2;
- (unsigned int)tokenIDForWordSeparator:(unsigned short)arg1;
- (unsigned int)tokenIDForWord:(id)arg1 context:(const unsigned int *)arg2 contextLength:(unsigned long long)arg3 createIfNecessary:(_Bool)arg4;
- (void)decrementLanguageModelCount:(unsigned int)arg1 context:(const unsigned int *)arg2 contextLength:(unsigned long long)arg3;
- (void)incrementLanguageModelCount:(unsigned int)arg1 context:(const unsigned int *)arg2 contextLength:(unsigned long long)arg3;
- (void)decrementUnigramCount:(id)arg1 usageFlags:(unsigned int)arg2;
- (void)incrementUnigramCount:(id)arg1 usageFlags:(unsigned int)arg2;
- (_Bool)shouldSuppressLearning;
- (void)textAccepted:(id)arg1;
- (_Bool)shouldAllowCorrectionOfAcceptedCandidate:(id)arg1;
- (void)setOriginalInput:(id)arg1;
- (id)defaultCandidate;
- (id)inputStem;
- (id)inputString;
- (unsigned int)inputCount;
- (unsigned int)inputIndex;
- (void)setInputIndex:(unsigned int)arg1;
- (void)updateInputContext;
- (id)internalInputContext;
- (id)inputContext;
- (void)acceptInput;
- (void)clearInput;
- (id)deleteFromInput:(unsigned long long *)arg1;
- (unsigned long long)deleteLengthForString:(id)arg1;
- (void)setInput:(id)arg1;
- (void)dropInput;
- (void)dropInputPrefix:(unsigned int)arg1;
- (void)trimInput;
- (_Bool)canRetrocorrectInputAtIndex:(unsigned int)arg1;
- (_Bool)canTrimInputAtIndex:(unsigned int)arg1;
- (unsigned long long)internalIndexOfInputStemSuffix:(id)arg1;
- (id)trimmedInputStem;
- (struct LanguageModelContext)sentenceContextForInputStem:(id)arg1;
- (_Bool)canComputeSentenceContextForInputStem:(id)arg1;
- (void)setInputStringFromDocumentState:(id)arg1;
- (struct _NSRange)inputStringRangeFromRevisionHistory;
- (struct _NSRange)acceptableRangeFromRange:(struct _NSRange)arg1 inText:(id)arg2 withSelectionLocation:(unsigned long long)arg3;
- (struct _NSRange)legacyInputRangeForTokenRange:(struct _NSRange)arg1;
- (unsigned int)simulateAutoshiftIfNecessaryForFlags:(unsigned int)arg1;
- (_Bool)hasLegacyInputString;
- (_Bool)hasLegacyInputStem;
- (id)addInput:(id)arg1 flags:(unsigned int)arg2 point:(struct CGPoint)arg3 firstDelete:(unsigned long long *)arg4 fromVariantKey:(_Bool)arg5;
- (void)releaseDynamicLanguageModel;
- (void)clearDynamicDictionary;
- (_Bool)inHardwareKeyboardMode;
- (void)setInHardwareKeyboardMode:(_Bool)arg1;
- (void)setKeyboardEventsLagging:(_Bool)arg1;
- (void)setLearnsCorrection:(_Bool)arg1;
- (void)setCollatorLocale;
- (void)deltaPathsChanged:(id)arg1;
- (void)loadFavoniusLanguageModel;
- (_Bool)updateLanguageModelForKeyboardState;
- (id)pathToDeltaStaticDictionary;
- (void)loadDictionaries;
- (struct TIInputManagerZephyr *)initImplementation;
- (id)dictionaryStringForExternalString:(id)arg1;
- (_Bool)dictionaryUsesExternalEncoding;
- (unsigned int)externalIndexToInternal:(unsigned int)arg1;
- (unsigned int)internalIndexToExternal:(unsigned int)arg1;
- (id)internalStringToExternal:(id)arg1;
- (id)externalStringToInternal:(id)arg1;
- (void)updateComposedText;
- (_Bool)doesComposeText;
- (void)refreshInputManagerState;
- (void)syncToKeyboardState:(id)arg1 afterContextChange:(_Bool)arg2;
- (void)resume;
- (void)suspend;
- (void)dealloc;
- (id)initWithInputMode:(id)arg1;
- (id)initWithConfig:(id)arg1;
- (id)configurationPropertyList;
- (void)logToTypologyRecorderWithString:(id)arg1;
- (_Bool)isTypologyEnabled;
- (void)storeLanguageModelDynamicDataIncludingCache;
- (void)clearHumanReadableTrace;
- (id)humanReadableTrace;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

