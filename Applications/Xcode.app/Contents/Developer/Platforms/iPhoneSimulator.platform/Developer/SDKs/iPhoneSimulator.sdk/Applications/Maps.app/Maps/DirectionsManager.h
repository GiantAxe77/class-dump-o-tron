//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "MKLocationManagerObserver.h"
#import "MNNavigationSessionUIDelegate.h"
#import "MNWaypointsLoaderDelegate.h"
#import "PBRequesterDelegate.h"
#import "RoutePickingSelectionDelegate.h"

@class DirectionsHistoryItem, DirectionsWaypoint, GEODirectionsRequestFeedback, GEOURLRouteHandle, MNDirectionsSession, MNRouteManager, MNRouteSet, MNTracePlayer, MNWaypointsLoader, NSDictionary, NSInvocation, NSMutableArray, NSString;

__attribute__((visibility("hidden")))
@interface DirectionsManager : NSObject <RoutePickingSelectionDelegate, MNWaypointsLoaderDelegate, PBRequesterDelegate, MNNavigationSessionUIDelegate, MKLocationManagerObserver>
{
    NSMutableArray *_observers;
    id <DirectionsManagerDelegate> _delegate;
    DirectionsWaypoint *_startWaypoint;
    DirectionsWaypoint *_endWaypoint;
    GEOURLRouteHandle *_routeHandle;
    MNTracePlayer *_tracePlayer;
    GEODirectionsRequestFeedback *_feedback;
    NSInvocation *_readyToStartRouteInvocation;
    MNWaypointsLoader *_waypointsLoader;
    DirectionsHistoryItem *_historyItem;
    unsigned int _isLoading:1;
    unsigned int _shouldStartRoute:1;
    unsigned int _needsSave:1;
    unsigned int _isUpdatingCurrentLocation:1;
    unsigned int _isResetting:1;
    _Bool _startingRoutesLoadAfterReset;
    MNDirectionsSession *_directionsSession;
    unsigned long long _transportType;
    NSDictionary *_userInfo;
}

+ (id)sharedDirectionsManager;
@property(retain, nonatomic) DirectionsHistoryItem *historyItem; // @synthesize historyItem=_historyItem;
@property(nonatomic) _Bool startingRoutesLoadAfterReset; // @synthesize startingRoutesLoadAfterReset=_startingRoutesLoadAfterReset;
@property(readonly, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) unsigned long long transportType; // @synthesize transportType=_transportType;
@property(readonly, nonatomic) GEODirectionsRequestFeedback *feedback; // @synthesize feedback=_feedback;
@property(readonly, nonatomic) MNTracePlayer *tracePlayer; // @synthesize tracePlayer=_tracePlayer;
@property(readonly, nonatomic) GEOURLRouteHandle *routeHandle; // @synthesize routeHandle=_routeHandle;
@property(readonly, nonatomic, getter=isUpdatingCurrentLocation) _Bool updatingCurrentLocation; // @synthesize updatingCurrentLocation=_isUpdatingCurrentLocation;
@property(nonatomic) __weak id <DirectionsManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) _Bool needsSave; // @synthesize needsSave=_needsSave;
@property(readonly, nonatomic) DirectionsWaypoint *endWaypoint; // @synthesize endWaypoint=_endWaypoint;
@property(readonly, nonatomic) DirectionsWaypoint *startWaypoint; // @synthesize startWaypoint=_startWaypoint;
@property(readonly, nonatomic) MNDirectionsSession *directionsSession; // @synthesize directionsSession=_directionsSession;
- (void).cxx_destruct;
- (void)startDirectionsToSelectedRouteWithOptions:(long long)arg1;
- (long long)defaultOptions;
- (void)directionsSessionRecommendsNewRoute:(id)arg1 oldEstimatedTime:(unsigned int)arg2 newEstimatedTime:(unsigned int)arg3 finished:(CDUnknownBlockType)arg4;
- (void)navigationSession:(id)arg1 matchedToStepIndex:(unsigned long long)arg2 andLegIndex:(unsigned long long)arg3;
- (void)navigationSessionWillStopNavigator:(id)arg1;
- (void)navigationSessionTransportTypeChanged:(id)arg1 newTransportType:(int)arg2;
- (void)navigationSessionDetectedNewTransportType:(id)arg1 newTransportType:(int)arg2;
- (void)navigationSessionHasReachedEndOfLeg:(id)arg1 willContinueGuidance:(_Bool)arg2;
- (void)navigationSessionHasArrived:(id)arg1;
- (void)navigationSessionHideSecondaryStep:(id)arg1;
- (void)navigationSession:(id)arg1 displaySecondaryStepManeuverType:(int)arg2 junctionType:(int)arg3 junctionElements:(CDStruct_e02beb0c *)arg4 count:(unsigned long long)arg5 instructions:(id)arg6 shorterAlternativeInstructions:(id)arg7 shieldType:(int)arg8 shieldText:(id)arg9 drivingSide:(int)arg10;
- (void)navigationSession:(id)arg1 displayManeuverAlertForAnnouncementStage:(unsigned long long)arg2;
- (void)navigationSession:(id)arg1 displayPrimaryStepManeuverType:(int)arg2 junctionType:(int)arg3 junctionElements:(CDStruct_e02beb0c *)arg4 count:(unsigned long long)arg5 instructions:(id)arg6 shorterAlternativeInstructions:(id)arg7 shieldType:(int)arg8 shieldText:(id)arg9 drivingSide:(int)arg10 maneuverStepIndex:(unsigned long long)arg11 isSynthetic:(_Bool)arg12;
- (void)navigationSession:(id)arg1 currentStepIndex:(unsigned long long)arg2 distanceUntilManeuver:(double)arg3 timeUntilManeuver:(double)arg4;
- (void)navigationSession:(id)arg1 remainingTime:(double)arg2 remainingDistance:(double)arg3;
- (void)navigationSession:(id)arg1 proceedToRouteDistance:(double)arg2 displayString:(id)arg3 remainingTime:(double)arg4 remainingDistance:(double)arg5 closestStepIndex:(unsigned long long)arg6;
- (void)navigationSession:(id)arg1 updatePointOfInterest:(CDStruct_c3b9c2ee)arg2 focusStyle:(int)arg3;
- (void)navigationSession:(id)arg1 startingStepIndex:(unsigned long long)arg2;
- (void)navigationSession:(id)arg1 failedWithErrorCode:(long long)arg2;
- (void)directionsSession:(id)arg1 failedWithError:(id)arg2;
- (void)directionsSession:(id)arg1 didChangeRoutePreloadSession:(id)arg2;
- (void)directionsSession:(id)arg1 didSwitchToNewRoute:(id)arg2 forcedSwitch:(_Bool)arg3;
- (void)directionsSessionDidCancelRoute:(id)arg1;
- (void)directionsSession:(id)arg1 didRecalculateNewRoute:(id)arg2;
- (void)directionsSessionWillRecalculateRoute:(id)arg1;
- (void)directionsSessionDidFailToReceiveRoute:(id)arg1 error:(id)arg2;
- (void)directionsSession:(id)arg1 didReceiveRouteSet:(id)arg2;
- (void)directionsSessionWillRequestRoute:(id)arg1 traceRecorderFailed:(_Bool)arg2;
- (void)navigationSession:(id)arg1 didChangeState:(int)arg2;
- (void)navigationSession:(id)arg1 updatedMatchedLocation:(id)arg2;
- (void)navigationSession:(id)arg1 didEnableGuidance:(_Bool)arg2;
- (void)navigationSessionWillResumeNavigatorFromPause:(id)arg1;
- (void)navigationSessionWillPauseNavigator:(id)arg1;
- (void)navigationSessionWillEnd:(id)arg1;
- (void)navigationSession:(id)arg1 willStartNavigatorForRoute:(id)arg2;
- (void)directionsSessionUpdatedTrafficIncidents:(id)arg1;
- (void)directionsSessionUpdatedETA:(id)arg1;
- (void)navigationSessionDidStart:(id)arg1;
- (void)navigationSession:(id)arg1 willStartForRoute:(id)arg2;
@property(readonly, nonatomic) long long currentLegIndex;
@property(readonly, nonatomic) long long currentStepIndex;
- (id)selectedRoute;
- (void)selectRouteAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfRoute:(id)arg1;
- (id)routes;
- (id)routeAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfRoutes;
- (void)_reportError:(id)arg1;
- (void)cancelLoadingRoutes;
@property(readonly, nonatomic, getter=isLoadingRoutes) _Bool loadingRoutes;
- (void)beginLoadingRoutesFromWaypoint:(id)arg1 toWaypoint:(id)arg2 mode:(unsigned long long)arg3 traits:(id)arg4 routeHandle:(id)arg5 tracePlayer:(id)arg6 withFeedback:(id)arg7 withUserInfo:(id)arg8 historyItem:(id)arg9;
- (void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;
- (void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (_Bool)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (void)_setUpdatingCurrentLocation:(_Bool)arg1;
- (void)_loadRoutesForStartWaypoint:(id)arg1 endWaypoint:(id)arg2 transportType:(int)arg3 passedTimepoint:(CDStruct_191b847f *)arg4 traits:(id)arg5;
- (void)waypointsLoader:(id)arg1 didLoadWaypointsForStart:(id)arg2 end:(id)arg3;
- (void)waypointsLoader:(id)arg1 didFailWithError:(id)arg2;
- (void)_startLoad;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)_endLocation;
- (id)_startLocation;
- (void)updateStartAndEndSearchResultsFromRouteSet:(id)arg1;
- (void)setEndWaypoint:(id)arg1;
- (void)setStartWaypoint:(id)arg1;
- (id)persistentDirections;
- (_Bool)currentlyMatchedToLeg:(id)arg1 onRoute:(id)arg2;
- (_Bool)canRunNavigationForLeg:(id)arg1 onRoute:(id)arg2;
- (_Bool)canRunNavigationForRoute:(id)arg1;
@property(readonly, nonatomic) _Bool canRunNavigationForSelectedRoute;
- (_Bool)_canRunNavigationBasedOnDistanceFromCurrentLocation;
@property(readonly, nonatomic) MNRouteSet *currentRouteSet;
@property(readonly, nonatomic) MNRouteManager *currentRouteManager;
- (id)_currentNavigator;
- (void)loadFromPersistentDirections:(id)arg1;
- (void)dealloc;
- (void)_performReset;
- (void)reset;
- (void)setTracePlayer:(id)arg1;
- (void)_setResponsesUpdated;
- (id)init;
- (void)setSelectedRoute:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

