//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "CloudTabStoreDelegate.h"
#import "RecentlyClosedTabViewControllerDelegate.h"
#import "TabBarDelegate.h"
#import "TabOverviewDelegate.h"
#import "TiltedTabViewDelegate.h"

@class BrowserController, CloudTabStore, GestureRecognizingBarButtonItem, NSArray, NSMutableArray, NSMutableSet, NSString, NSTimer, RecentlyClosedTabViewController, TabBar, TabDocument, TabOverview, TiltedTabView, UIButton;

@interface TabController : NSObject <CloudTabStoreDelegate, TabOverviewDelegate, TiltedTabViewDelegate, RecentlyClosedTabViewControllerDelegate, TabBarDelegate>
{
    BrowserController *_browserController;
    NSMutableArray *_normalTabDocuments;
    NSMutableArray *_privateTabDocuments;
    TabDocument *_normalActiveTabDocument;
    TabDocument *_privateActiveTabDocument;
    NSTimer *_saveStateTimer;
    NSTimer *_stateValidateTimer;
    CloudTabStore *_cloudTabStore;
    _Bool _cloudTabUpdatesEnabled;
    TabDocument *_tabDocumentBeingHiddenFromTabView;
    NSMutableSet *_tabDocumentsAboutToBeClosedInTiltedTabView;
    GestureRecognizingBarButtonItem *_tiltedTabViewAddTabButton;
    _Bool _tiltedTabViewIsShowing;
    NSTimer *_updateContinuityTimer;
    _Bool _canCloseLastTabViewTab;
    _Bool _tabBarItemsFixed;
    _Bool _tabViewItemsFixed;
    RecentlyClosedTabViewController *_recentlyClosedTabController;
    _Bool _tabExposeButtonIndicatorExcludesBlankDocuments;
    _Bool _privateBrowsingEnabled;
    _Bool _usesTiltedTabView;
    TabBar *_tabBar;
    unsigned long long _maximumTabDocumentCount;
    TiltedTabView *_tiltedTabView;
    UIButton *_tiltedTabViewPrivateBrowsingButton;
    TabOverview *_tabOverview;
}

@property(readonly, retain, nonatomic) TabOverview *tabOverview; // @synthesize tabOverview=_tabOverview;
@property(readonly, nonatomic) UIButton *tiltedTabViewPrivateBrowsingButton; // @synthesize tiltedTabViewPrivateBrowsingButton=_tiltedTabViewPrivateBrowsingButton;
@property(nonatomic) _Bool usesTiltedTabView; // @synthesize usesTiltedTabView=_usesTiltedTabView;
@property(readonly, retain, nonatomic) TiltedTabView *tiltedTabView; // @synthesize tiltedTabView=_tiltedTabView;
@property(readonly, nonatomic) CloudTabStore *cloudTabStore; // @synthesize cloudTabStore=_cloudTabStore;
@property(nonatomic, getter=isPrivateBrowsingEnabled) _Bool privateBrowsingEnabled; // @synthesize privateBrowsingEnabled=_privateBrowsingEnabled;
@property(readonly, nonatomic) unsigned long long maximumTabDocumentCount; // @synthesize maximumTabDocumentCount=_maximumTabDocumentCount;
@property(nonatomic) _Bool tabExposeButtonIndicatorExcludesBlankDocuments; // @synthesize tabExposeButtonIndicatorExcludesBlankDocuments=_tabExposeButtonIndicatorExcludesBlankDocuments;
@property(readonly, copy, nonatomic) NSArray *privateTabDocuments; // @synthesize privateTabDocuments=_privateTabDocuments;
@property(readonly, copy, nonatomic) NSArray *tabDocuments; // @synthesize tabDocuments=_normalTabDocuments;
@property(readonly, retain, nonatomic) TabBar *tabBar; // @synthesize tabBar=_tabBar;
- (void).cxx_destruct;
- (void)_updateContinuityTimerFired;
- (void)saveTabDocumentContinuityActivitySoon:(id)arg1;
- (void)_cancelPendingUpdateContinuityActivityTimer;
- (void)cloudTabStore:(id)arg1 cloudTabsEnabledDidChange:(_Bool)arg2;
- (void)cloudTabStore:(id)arg1 didReceiveTabCloseRequest:(id)arg2;
- (void)updateCloudTabs;
- (void)_updateTabOverviewItems;
@property(nonatomic) _Bool usesTabOverview;
- (void)tabOverviewDidPressDoneButton:(id)arg1;
- (void)tabOverview:(id)arg1 closeCloudTab:(id)arg2 onDevice:(id)arg3;
- (_Bool)tabOverview:(id)arg1 item:(id)arg2 matchesSearchText:(id)arg3;
- (void)tabOverview:(id)arg1 didSelectNavigationDestination:(id)arg2;
- (id)blankSnapshotForTabOverview:(id)arg1 topBackdropHeight:(double)arg2;
- (void)tabOverview:(id)arg1 requestSnapshotOfSize:(struct CGSize)arg2 topBackdropHeight:(double)arg3 forItem:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)tabOverview:(id)arg1 relinquishContentView:(id)arg2 forItem:(id)arg3;
- (id)tabOverview:(id)arg1 borrowContentViewForItem:(id)arg2 topBackdropHeight:(double)arg3;
- (double)tabOverview:(id)arg1 headerHeightForItem:(id)arg2;
- (void)tabOverview:(id)arg1 didMoveItem:(id)arg2 overItem:(id)arg3;
- (void)tabOverview:(id)arg1 closeItem:(id)arg2;
- (_Bool)tabOverview:(id)arg1 canCloseItem:(id)arg2;
- (void)tabOverview:(id)arg1 didSelectItem:(id)arg2;
- (void)tabOverviewAddTab:(id)arg1;
- (id)currentItemForTabOverview:(id)arg1;
- (void)tabOverviewDidCancelDismissal:(id)arg1;
- (void)tabOverviewDidBeginDismissal:(id)arg1;
- (void)tabOverviewDidDismiss:(id)arg1;
- (void)tabOverviewWillPresent:(id)arg1;
- (id)_tabDocumentRepresentedByTabOverviewItem:(id)arg1;
- (void)_addNewActiveTiltedTabViewTabWithNavigationDestination:(id)arg1;
- (void)_addNewActiveTiltedTabViewTab;
- (void)tiltedTabView:(id)arg1 closeCloudTab:(id)arg2 onDevice:(id)arg3;
- (void)tiltedTabView:(id)arg1 didSelectNavigationDestination:(id)arg2;
- (id)blankSnapshotForTiltedTabView:(id)arg1 topBackdropHeight:(double)arg2;
- (void)tiltedTabView:(id)arg1 requestSnapshotOfSize:(struct CGSize)arg2 topBackdropHeight:(double)arg3 forItem:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)tiltedTabView:(id)arg1 animateTopBackdropView:(id)arg2 hidden:(_Bool)arg3;
- (double)tiltedTabView:(id)arg1 headerHeightForItem:(id)arg2;
- (void)tiltedTabView:(id)arg1 relinquishContentView:(id)arg2 forItem:(id)arg3;
- (id)tiltedTabView:(id)arg1 borrowContentViewForItem:(id)arg2 withTopBackdropView:(id *)arg3 ofHeight:(double)arg4;
- (id)currentItemForTiltedTabView:(id)arg1;
- (void)tiltedTabView:(id)arg1 didMoveItem:(id)arg2 overItem:(id)arg3;
- (void)tiltedTabView:(id)arg1 closeItem:(id)arg2;
- (_Bool)tiltedTabView:(id)arg1 canCloseItem:(id)arg2;
- (void)tiltedTabView:(id)arg1 didSelectItem:(id)arg2;
- (void)tiltedTabViewDidDismiss:(id)arg1;
- (void)tiltedTabViewWillDismiss:(id)arg1;
- (void)tiltedTabViewDidPresent:(id)arg1;
- (void)tiltedTabViewWillPresent:(id)arg1;
- (id)_tabDocumentRepresentedByTiltedTabItem:(id)arg1;
- (void)_addTabLongPressRecognized:(id)arg1;
- (void)_dismissTiltedTabView;
- (void)updateTiltedTabViewToolbarItems;
@property(readonly, nonatomic) NSArray *tiltedTabViewToolbarItems;
- (void)_handlePendingCloseTabRequests;
- (void)_updateTabOverviewCloudTabs;
- (void)_updateTiltedTabViewCloudTabs;
- (void)_cloudTabsDidUpdate:(id)arg1;
- (void)_updateTiltedTabViewItemsWithTransition:(long long)arg1;
- (void)_updateTiltedTabViewItemsAnimated:(_Bool)arg1;
- (void)_updateTiltedTabViewItems;
- (void)_updateUsesTiltedTabView;
- (void)_updateCloudTabUpdatesEnabled;
- (void)_setCloudTabUpdatesEnabled:(_Bool)arg1;
- (void)updateTabExposeButtonIndicator;
- (void)_updateExplanationViewVisibility;
- (_Bool)_shouldShowExplanationView;
- (void)_suppressSingleEmptyTabIfAppropriate;
- (void)openBlankTabDocumentInTabBar;
- (void)updateTabBarAnimated:(_Bool)arg1;
- (void)updateTabBarAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_updateTabBarAnimated:(_Bool)arg1 keepingDocumentVisible:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)recentlyClosedTabViewController:(id)arg1 didSelectTabDocument:(id)arg2;
- (void)_addRecentlyClosedTabDocument:(id)arg1;
- (void)tabBar:(id)arg1 activateItem:(id)arg2;
- (void)tabBar:(id)arg1 closeItem:(id)arg2;
- (void)tabBar:(id)arg1 moveItem:(id)arg2 overItem:(id)arg3;
- (void)tabBarAddTab:(id)arg1;
- (_Bool)tabBar:(id)arg1 canCloseItem:(id)arg2;
- (_Bool)tabBar:(id)arg1 canMoveItem:(id)arg2;
- (id)_tabDocumentRepresentedByTabBarItem:(id)arg1;
- (void)_setTabBarItemsFixed:(_Bool)arg1;
@property(nonatomic) _Bool usesTabBar;
- (void)setMaximumTabDocumentCountForTesting:(unsigned long long)arg1;
- (void)clearBrowserController;
- (void)dealloc;
- (id)initWithBrowserController:(id)arg1;
- (void)openInitialBlankTabDocumentIfNeeded;
- (void)replaceTabDocument:(id)arg1 withTabDocument:(id)arg2;
- (void)pausePagesWithEventsForActiveDocument:(_Bool)arg1;
- (void)resume;
- (void)suspendForEventsOnly:(_Bool)arg1;
- (id)_tabDocumentForURL:(id)arg1 withUUID:(id)arg2;
- (id)tabDocumentForURL:(id)arg1;
- (id)tabDocumentForWebView:(id)arg1;
- (void)moveTabDocument:(id)arg1 overTabDocument:(id)arg2;
- (void)closeAllOpenTabsAnimated:(_Bool)arg1 exitTabView:(_Bool)arg2;
- (void)closeTabDocument:(id)arg1 animated:(_Bool)arg2;
- (_Bool)_shouldFocusPreviousDocumentWhenClosingDocument:(id)arg1;
- (_Bool)_createAndSwitchToNewBlankTabDocumentOpeningCaptiveLandingPageIfNecessary;
- (id)_openBlankTabDocument;
- (void)insertNewBlankTabDocumentAnimated:(_Bool)arg1;
- (id)_insertNewBlankTabDocumentInBackground:(_Bool)arg1 animated:(_Bool)arg2;
- (void)insertNewTabDocument:(id)arg1 openedFromTabDocument:(id)arg2 inBackground:(_Bool)arg3 animated:(_Bool)arg4;
- (void)_insertTabDocument:(id)arg1 afterTabDocument:(id)arg2 inBackground:(_Bool)arg3 animated:(_Bool)arg4;
- (void)_makeRoomForNewTabDocument:(id)arg1;
- (id)_oldestInactiveTabDocument;
- (_Bool)canAddNewTab;
- (void)_switchActiveTabDocumentFromTabDocument:(id)arg1 toTabDocument:(id)arg2;
- (void)setActiveTabDocument:(id)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) TabDocument *activeTabDocument;
- (void)_logActivationForTab:(id)arg1;
- (void)logTabActivationInterval:(double)arg1 forActivationType:(long long)arg2;
- (void)_tabCountDidChange;
- (void)_auditTabCount;
@property(readonly, copy, nonatomic) NSArray *allTabDocuments;
@property(readonly, copy, nonatomic) NSArray *currentTabDocuments;
- (id)_currentTabs;
@property(readonly, nonatomic) RecentlyClosedTabViewController *recentlyClosedTabController;
- (void)_restorePersistentDocumentState:(id)arg1 into:(id)arg2 withCurrentActiveDocument:(id)arg3 activeDocumentIsValid:(_Bool)arg4 restoredActiveDocumentIndex:(unsigned long long)arg5;
- (_Bool)readState;
- (void)saveStateInBackground:(_Bool)arg1;
- (id)_persistentStateDictionaryForTabs:(id)arg1;
- (void)saveStateInBackground:(_Bool)arg1 needsValidate:(_Bool)arg2;
- (void)_validateSavedState:(id)arg1;
- (void)_clearStateValidateTimer;
- (void)_saveStateFromTimer:(id)arg1;
- (void)_setSaveStateTimer:(id)arg1;
- (void)setStateNeedsSaved;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

