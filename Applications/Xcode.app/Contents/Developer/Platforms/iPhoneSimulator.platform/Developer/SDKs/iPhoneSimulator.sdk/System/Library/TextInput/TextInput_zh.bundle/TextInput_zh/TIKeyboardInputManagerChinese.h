//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "TIKeyboardInputManager_zh_ja.h"

@class CIMCandidateData, NSOperationQueue, NSString, TICandidateCommitHistory, TIMecabraContext, TIWordSearch, TIWordSearchCandidateResultSet;

@interface TIKeyboardInputManagerChinese : TIKeyboardInputManager_zh_ja
{
    TIMecabraContext *_adaptationContext;
    TIWordSearch *_wordSearch;
    TIWordSearchCandidateResultSet *_wordSearchCandidateResultSet;
    _Bool _isInCompletionMode;
    _Bool _showingFacemarks;
    _Bool _shouldLearnAcceptedCandidate;
    _Bool _isAlphabeticPlane;
    NSString *_language;
    NSString *_modeName;
    CIMCandidateData *_candidateData;
    NSOperationQueue *_operationQueue;
    NSString *_pairedPunctuationOpenQuote;
    NSString *_pairedPunctuationSelectedText;
    TICandidateCommitHistory *_candidateCommitHistory;
}

+ (id)pairedPunctuationDictionary;
+ (Class)wordSearchClass;
+ (_Bool)shouldEnableHalfWidthPunctuationForDocumentContext:(id)arg1 composedText:(id)arg2;
+ (id)unicodeCandidateFromString:(id)arg1;
+ (id)GB18030CandidateFromString:(id)arg1;
@property(retain, nonatomic) TICandidateCommitHistory *candidateCommitHistory; // @synthesize candidateCommitHistory=_candidateCommitHistory;
@property(readonly, nonatomic) TIMecabraContext *adaptationContext; // @synthesize adaptationContext=_adaptationContext;
@property(copy, nonatomic) NSString *pairedPunctuationSelectedText; // @synthesize pairedPunctuationSelectedText=_pairedPunctuationSelectedText;
@property(copy, nonatomic) NSString *pairedPunctuationOpenQuote; // @synthesize pairedPunctuationOpenQuote=_pairedPunctuationOpenQuote;
@property(nonatomic) _Bool isAlphabeticPlane; // @synthesize isAlphabeticPlane=_isAlphabeticPlane;
@property(retain, nonatomic) TIWordSearchCandidateResultSet *wordSearchCandidateResultSet; // @synthesize wordSearchCandidateResultSet=_wordSearchCandidateResultSet;
@property(nonatomic) _Bool shouldLearnAcceptedCandidate; // @synthesize shouldLearnAcceptedCandidate=_shouldLearnAcceptedCandidate;
@property(nonatomic) _Bool showingFacemarks; // @synthesize showingFacemarks=_showingFacemarks;
@property(nonatomic) _Bool isInCompletionMode; // @synthesize isInCompletionMode=_isInCompletionMode;
@property(copy, nonatomic) NSString *modeName; // @synthesize modeName=_modeName;
@property(copy, nonatomic) NSString *language; // @synthesize language=_language;
- (id)wordSearch;
- (_Bool)handlePairedPunctuationInput:(id)arg1 context:(id)arg2;
- (_Bool)supportsPairedPunctutationInput;
- (void)acceptFirstCandidateWithContext:(id)arg1;
- (id)firstCandidate;
- (id)candidateResultSetFromWordSearchCandidateResultSet:(id)arg1;
- (_Bool)needsKeyHitTestResults;
- (_Bool)canHandleKeyHitTest;
- (void)setLearnsCorrection:(_Bool)arg1;
- (_Bool)shouldSearchCompletionForSubstrings;
- (unsigned long long)initialCandidateBatchCount;
@property(readonly) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(readonly) CIMCandidateData *candidateData; // @synthesize candidateData=_candidateData;
- (void)groupedCandidatesFromCandidates:(id)arg1 usingSortingMethod:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)groupedCandidatesFromCandidates:(id)arg1 usingSortingMethod:(id)arg2;
- (id)sortMethodsGroupsForCandidates:(id)arg1;
- (id)titleForSortingMethod:(id)arg1;
- (_Bool)alwaysShowExtensionCandidatesForSortingMethod:(id)arg1;
- (id)sortingMethods;
- (unsigned long long)initialSelectedIndex;
- (_Bool)updateCompletionCandidatesIfAppropriate;
- (id)generateCompletions;
- (_Bool)analyzeForPredictionsWithOption:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long predictionOptions;
- (struct __Mecabra *)mecabra;
- (void *)mecabraCandidateRefFromPointerValue:(id)arg1;
- (void *)mecabraCandidateRefFromCandidate:(id)arg1;
- (id)candidateResultSetUsedForCompletionQuery;
- (void)willExitCompletionMode;
- (_Bool)shouldEnableHalfWidthPunctuationForCurrentInputContext;
- (id)wordCharacters;
- (id)replacementForDoubleSpace;
- (id)didAcceptCandidate:(id)arg1;
- (id)keyEventMap;
- (void)syncToKeyboardState:(id)arg1 afterContextChange:(_Bool)arg2;
- (void)syncToLayoutState:(id)arg1;
- (struct WordTrie *)loadTrie:(id)arg1;
- (struct TIInputManagerZephyr *)initImplementationWithMode:(id)arg1 andLanguage:(id)arg2;
- (void)resetCommitHistory;
- (void)dealloc;
- (id)initWithInputMode:(id)arg1;

@end

