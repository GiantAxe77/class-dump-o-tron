//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "VOTOutputComponent.h"

#import "TTSSpeechSynthesizerDelegate.h"

@class AXDialectMap, AXFileLogger, NSArray, NSDictionary, NSMutableDictionary, NSString, SCRCIndexMap, SCRCThread, TTSSpeechRequest, TTSSpeechSynthesizer;

@interface VOTOutputSpeechComponent : VOTOutputComponent <TTSSpeechSynthesizerDelegate>
{
    SCRCThread *_speechThread;
    TTSSpeechSynthesizer *_synthesizer;
    SCRCIndexMap *_letterPunctuationTable;
    SCRCIndexMap *_selectedLanguageLetterPunctuationTable;
    SCRCIndexMap *_wordPunctuationTable;
    SCRCIndexMap *_specialPunctionTable;
    NSString *_spokenLanguage;
    NSDictionary *_languageExceptions;
    _Bool _isSpeaking;
    _Bool _userStopped;
    _Bool _isPaused;
    _Bool _isVolumeCapped;
    float _rawVolume;
    NSMutableDictionary *_speechStatistics;
    NSDictionary *_emoticonReplacements;
    AXDialectMap *_supportedLanguageMap;
    double _lastTimeSpeechStarted;
    SCRCIndexMap *_currentActionVariants;
    TTSSpeechRequest *_currentRequest;
    NSArray *_userSubstitutions;
    _Bool _dumpSpeechToFile;
    AXFileLogger *_fileLogger;
}

@property(readonly, nonatomic) _Bool isPaused; // @synthesize isPaused=_isPaused;
@property(readonly, nonatomic) _Bool isSpeaking; // @synthesize isSpeaking=_isSpeaking;
- (void)setShouldOutputToHearingAid:(_Bool)arg1;
- (void)_didFinishSpeaking:(id)arg1 finishedSpeaking:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didFinishSpeakingRequest:(id)arg2 successfully:(_Bool)arg3 withError:(id)arg4;
- (void)speechSynthesizer:(id)arg1 willSpeakRangeOfSpeechString:(struct _NSRange)arg2 forRequest:(id)arg3;
- (void)_uncapVolume;
- (void)_capVolumeForLanguage:(id)arg1;
- (void)_handlePerformAction:(id)arg1;
- (void)_notifyDidFinishSpeakingWithFakeRequestForEvent:(id)arg1;
- (_Bool)stringIsInSupportedCharacters:(id)arg1;
- (id)currentLanguageMap;
- (void)preprocessAction:(id)arg1;
- (void)_speakAsMixOfLiteralAndNormalText:(id)arg1 withLiteralRanges:(id)arg2;
- (void)_speakAsNormalText:(id)arg1;
- (id)_stringForNormalText:(id)arg1 action:(id)arg2 allowPausingAtBoundaries:(_Bool)arg3 ignoreLeadingCommas:(_Bool)arg4;
- (void)_replaceUserSubstitutions:(id)arg1 action:(id)arg2;
- (_Bool)_makeSubstitution:(id)arg1 withString:(id)arg2 punctuationLevel:(int)arg3;
- (void)_insertEmoji:(id)arg1;
- (void)_replaceEmoticonsWithText:(id)arg1;
- (void)_removeRunsOfNewLines:(id)arg1;
- (void)_replacePunctuation:(id)arg1 withAction:(id)arg2 replaceCommas:(_Bool)arg3 languageCode:(id)arg4;
- (id)replacePunctuation:(id)arg1 level:(int)arg2 replaceCommas:(_Bool)arg3 languageCode:(id)arg4;
- (_Bool)_characterSearchesForSingularForms:(unsigned short)arg1;
- (id)_parseNumberInString:(id)arg1 beforeCharacterAtIndex:(long long)arg2;
- (id)_replacePunctuation:(id)arg1 level:(int)arg2 hasMathContext:(_Bool)arg3 hasPhoneContext:(_Bool)arg4 isText:(_Bool)arg5 replaceCommas:(_Bool)arg6 languageCode:(id)arg7;
- (void)_applyTextualWorkarounds:(id)arg1;
- (void)_speakAsPhoneticText:(id)arg1;
- (void)_speakAsLiteralText:(id)arg1;
- (id)_stringForLiteralText:(id)arg1 action:(id)arg2;
- (id)_literalStringMarkupForString:(id)arg1;
- (void)_appendLiteralCharacterString:(id)arg1 toString:(id)arg2 hasPhoneContext:(_Bool)arg3 hasMathContext:(_Bool)arg4 action:(id)arg5 languageCode:(id)arg6;
- (void)setUseCompactVoice:(_Bool)arg1;
- (void)_formatTimeDuration:(id)arg1 didMatch:(_Bool *)arg2;
- (void)_formatExplicitTimeDuration:(id)arg1 isMMSS:(_Bool)arg2;
- (void)_formatIPAddress:(id)arg1;
- (void)_formatDetectedDates:(id)arg1;
- (void)_formatTelephoneNumber:(id)arg1;
- (void)_applyTelephoneFormatting:(id)arg1 withRanges:(id)arg2;
- (void)_insertLongerPausesForSymbol:(id)arg1 withText:(id)arg2 allowPausingAtBoundaries:(_Bool)arg3 onlyApplyWhenFollowedBySpace:(_Bool)arg4;
- (id)pauseStringForType:(int)arg1;
- (_Bool)_stringMatchesSpecialCases:(id)arg1 forSymbol:(id)arg2 ranges:(id *)arg3;
- (id)_secureTextDescription:(id)arg1;
- (void)_replaceEmbeddedTTSCommands:(id)arg1;
- (void)_speakAllDigits:(id)arg1;
- (void)handleEvent:(id)arg1;
- (void)dealloc;
- (void)_handleStopSpeaking:(id)arg1;
- (void)_handleContinueSpeaking:(id)arg1;
- (void)_handlePauseSpeaking:(id)arg1;
- (void)stopSpeakingAtBoundary:(int)arg1;
- (void)stopSpeakingAtBoundary:(int)arg1 allRequests:(_Bool)arg2;
- (void)continueSpeaking;
- (void)pauseSpeakingAtBoundary:(int)arg1;
- (void)setVoice:(id)arg1;
- (void)_setVoice:(id)arg1;
- (void)setRate:(float)arg1;
- (float)rate;
- (void)_setRate:(id)arg1;
- (float)volume;
- (void)setVolume:(float)arg1;
- (void)_setVolume:(id)arg1;
- (void)_loadPunctuationTable:(id)arg1 withLevel:(long long)arg2 language:(id)arg3;
- (void)_saveSpeechStats;
- (id)currentLetterPunctuationTable;
- (void)__selectedLanguageChanged;
- (void)_selectedLanguageChanged:(id)arg1;
- (void)_initializePunctuationData;
- (id)init;
- (void)_loadSpecialPunctuation;
- (void)_setAudioSessionProperties:(id)arg1;
- (void)_initializeSynthesizer;
- (double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 waitTime:(double)arg3 cancelMask:(unsigned int)arg4 count:(unsigned int)arg5 objects:(id)arg6;
- (double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 count:(unsigned int)arg3 objects:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

