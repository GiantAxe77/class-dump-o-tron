//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <UIKit/__UIKeyboardLayoutStarAccessibility_super.h>

@interface UIKeyboardLayoutStarAccessibility : __UIKeyboardLayoutStarAccessibility_super
{
}

+ (void)_accessibilityPerformValidations:(id)arg1;
+ (Class)safeCategoryTargetClass;
+ (id)safeCategoryTargetClassName;
- (long long)accessibilityNavigationStyle;
- (id)_accessibilityScannerGroupElements;
- (id)_accessibilityGetKeyboardRowsByRowNumber;
- (id)_accessibilityGetRowForEmojiKey:(id)arg1 numEmojiCols:(int *)arg2 emojiKeyIndex:(unsigned long long *)arg3;
- (_Bool)canProduceString:(id)arg1;
- (id)accessibilityElementAtIndex:(long long)arg1;
- (long long)indexOfAccessibilityElement:(id)arg1;
- (long long)accessibilityElementCount;
- (_Bool)isAccessibilityElement;
- (id)_accessibilitySupplementaryHeaderViews;
- (id)_accessibilityHitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)_accessibilityKeyElementForKey:(id)arg1;
- (void)activateCompositeKey:(id)arg1 direction:(int)arg2 flickString:(id)arg3 popupInfo:(id)arg4;
- (void)setState:(int)arg1 forKey:(id)arg2;
- (void)showPopupView:(int)arg1 withKey:(id)arg2 popupInfo:(id)arg3 force:(_Bool)arg4;
- (void)showPopupVariantsForKey:(id)arg1;
- (id)_accessibilityUserTestingChildren;
- (void)setKeyplaneName:(id)arg1;
- (_Bool)_isSmallLetterKeyplane:(id)arg1;
- (_Bool)_isCapitalLetterKeyplane:(id)arg1;
- (void)setReturnKeyEnabled:(_Bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3;
- (void)setLabel:(id)arg1 forKey:(id)arg2;
- (void)_axClearReturnKeyLabel;
- (id)_accessibilityKeys;
- (id)_accessibiltyAvailableKeyplanes;
- (void)_accessibilityChangeToKeyplane:(id)arg1;
- (id)_accessibilityKeyboardKeyForString:(id)arg1;
- (_Bool)_accessibilityKeyboardSupportsGestureMode;
- (_Bool)accessibilityElementsHidden;
- (void)dealloc;
- (void)_accessibilityResetInternalData;
- (id)_accessibilityInternalData;
- (void)touchDragged:(id)arg1 executionContext:(id)arg2;
- (void)touchUp:(id)arg1 executionContext:(id)arg2;
- (void)touchDown:(id)arg1 executionContext:(id)arg2;
- (_Bool)_accessibilityFingerIsDown;
- (id)_accessibilityCreateElementForKey:(id)arg1;
- (_Bool)accessibilityPerformEscape;
- (unsigned long long)accessibilityTraits;

@end

