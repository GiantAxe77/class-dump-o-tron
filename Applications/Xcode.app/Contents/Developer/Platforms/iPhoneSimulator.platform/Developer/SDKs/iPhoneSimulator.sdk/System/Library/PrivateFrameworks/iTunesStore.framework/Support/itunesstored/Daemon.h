//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSCountedSet, NSMutableDictionary, NSMutableSet, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSObject<OS_xpc_object>;

@interface Daemon : NSObject
{
    _Bool _aliveForOperationQueues;
    NSMutableDictionary *_backgroundTaskObservers;
    NSMutableDictionary *_cachedObjects;
    long long _dialogCount;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSObject<OS_dispatch_source> *_jetsamSource;
    NSCountedSet *_keepAliveAssertions;
    NSMutableSet *_keepAliveOperationQueues;
    NSObject<OS_xpc_object> *_satisfiedWakeRequests;
}

+ (id)daemon;
- (void)_warmUpSharedURLCache;
- (void)_setGlobalState;
- (void)_reloadWiFiManager;
- (void)_reloadOperationKeepAliveTransaction;
- (void)_observeNotifications;
- (void)_releaseKeepAliveAssertion:(id)arg1;
- (void)_initBackgroundTaskAgent;
- (void)_handleWakeWithName:(const char *)arg1 job:(id)arg2;
- (void)_expireCachedObjectForKey:(id)arg1;
- (void)_operationCountChanged:(id)arg1;
- (void)_networkUsageStateChangeNotification:(id)arg1;
- (void)_getShowingDialogWithMessage:(id)arg1 connection:(id)arg2;
- (void)takeKeepAliveAssertion:(id)arg1;
- (void)start;
- (void)removeKeepAliveOperationQueue:(id)arg1;
- (void)removeCachedObjectForKey:(id)arg1;
- (void)removeBackgroundTaskObserver:(id)arg1;
- (void)releaseKeepAliveAssertion:(id)arg1;
- (void)keepAliveWithAssertion:(id)arg1 block:(CDUnknownBlockType)arg2;
- (_Bool)hasBackgroundTaskWithIdentifier:(id)arg1;
- (void)endShowingDialog;
- (void)cancelBackgroundTaskWithIdentifier:(id)arg1;
- (void)cacheObject:(id)arg1 withKey:(id)arg2 expirationInterval:(double)arg3;
- (id)cachedObjectForKey:(id)arg1;
- (void)beginShowingDialog;
- (id)addObserverForBackgroundTaskWithIdentifierPrefix:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)addKeepAliveOperationQueue:(id)arg1;
- (void)addBackgroundTaskWithRequest:(id)arg1;
- (void)dealloc;
- (id)init;

@end

