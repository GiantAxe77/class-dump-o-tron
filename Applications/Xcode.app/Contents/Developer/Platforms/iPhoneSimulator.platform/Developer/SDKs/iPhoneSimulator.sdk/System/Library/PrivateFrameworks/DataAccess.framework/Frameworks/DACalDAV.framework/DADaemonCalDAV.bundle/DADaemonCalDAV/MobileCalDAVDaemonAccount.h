//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MobileCalDAVAccount.h"

#import "DABabysittable.h"
#import "DADataclassLockWatcher.h"
#import "DARefreshManagerDelegate.h"

@class CalDAVAgent, CoreDAVOptionsTask, DATrustHandler, NSMutableDictionary, NSMutableSet, NSString, NSTimer;

@interface MobileCalDAVDaemonAccount : MobileCalDAVAccount <DADataclassLockWatcher, DARefreshManagerDelegate, DABabysittable>
{
    CalDAVAgent *_consumer;
    _Bool _shouldRegisterWithRefreshManager;
    _Bool _safeToRefresh;
    _Bool _waitingForGatekeeper;
    _Bool _holdingGatekeeperLock;
    _Bool _waitingForDiscoveryGatekeeper;
    _Bool _holdingDiscoveryGatekeeperLock;
    _Bool _forcedRefresh;
    _Bool _fullRefresh;
    int _refreshReason;
    double _lastRetryTimeout;
    NSMutableDictionary *_attachmentDownloadsByAttachmentUUID;
    NSMutableDictionary *_calendarAvailabilityRequests;
    NSMutableDictionary *_shareResponses;
    NSMutableDictionary *_directorySearches;
    CoreDAVOptionsTask *_optionsProbe;
    NSTimer *_optionsTimeoutTimer;
    NSMutableSet *_watchedCollections;
}

+ (int)convertToMobileCalDAVRefreshReason:(int)arg1;
+ (int)extractDARefreshReasonFromContext:(id)arg1;
@property(retain, nonatomic) NSMutableDictionary *shareResponses; // @synthesize shareResponses=_shareResponses;
@property(retain, nonatomic) NSMutableDictionary *directorySearches; // @synthesize directorySearches=_directorySearches;
@property(retain, nonatomic) NSMutableDictionary *calendarAvailabilityRequests; // @synthesize calendarAvailabilityRequests=_calendarAvailabilityRequests;
@property(retain, nonatomic) NSMutableDictionary *attachmentDownloadsByAttachmentUUID; // @synthesize attachmentDownloadsByAttachmentUUID=_attachmentDownloadsByAttachmentUUID;
@property(nonatomic) _Bool shouldRegisterWithRefreshManager; // @synthesize shouldRegisterWithRefreshManager=_shouldRegisterWithRefreshManager;
@property(retain, nonatomic) NSTimer *optionsTimeoutTimer; // @synthesize optionsTimeoutTimer=_optionsTimeoutTimer;
@property(retain, nonatomic) CoreDAVOptionsTask *optionsProbe; // @synthesize optionsProbe=_optionsProbe;
@property(nonatomic) int refreshReason; // @synthesize refreshReason=_refreshReason;
@property(nonatomic) _Bool forcedRefresh; // @synthesize forcedRefresh=_forcedRefresh;
@property(nonatomic) _Bool fullRefresh; // @synthesize fullRefresh=_fullRefresh;
@property(nonatomic) _Bool safeToRefresh; // @synthesize safeToRefresh=_safeToRefresh;
@property(nonatomic) __weak CalDAVAgent *consumer; // @synthesize consumer=_consumer;
- (void).cxx_destruct;
- (_Bool)monitorFoldersWithIDs:(id)arg1;
- (id)serverTokenRegistrationURL;
- (id)watchedCollections;
- (void)refreshCollections:(id)arg1 withReason:(int)arg2;
- (void)_probeAndSync;
- (void)discoverInitialPropertiesWithConsumer:(id)arg1;
- (void)discoveryTask:(id)arg1 gotAccountInfo:(id)arg2 error:(id)arg3;
- (void)_serverProbeTimedOut;
- (void)_refresh;
- (void)_continueRefresh;
- (_Bool)_shouldRefreshInResponseToDBChange;
- (_Bool)_hasChangesInStore:(void *)arg1 forChangesCall:(CDUnknownFunctionPointerType)arg2;
- (void)_reallyPerformSearchQuery:(id)arg1;
- (id)waiterID;
- (void)_persistAccountSyncDiagnostics:(id)arg1 withContext:(id)arg2 completionTime:(id)arg3 willAttemptToRetry:(_Bool)arg4 hitInternalRefreshTimeout:(_Bool)arg5 error:(id)arg6;
- (void)refreshActor:(id)arg1 didCompleteWithError:(id)arg2;
- (void)_refreshSubscribedCalendarChildAccounts;
- (void)_updateWatchedCollections;
- (_Bool)_hasSubscribedCalendars;
- (void)cancelRefreshWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)APSTopicHasValidPrefix:(id)arg1;
- (void)dealloc;
- (void)_cancelOptionsTimer;
- (id)initWithBackingAccountInfo:(id)arg1;
- (void)calendarAvailabilityRequestIsGoingAway:(id)arg1;
- (void)cancelAllCalendarAvailabilityRequests;
- (void)cancelCalendarAvailabilityRequestWithID:(id)arg1;
- (id)requestCalendarAvailabilityForStartDate:(id)arg1 endDate:(id)arg2 ignoredEventID:(id)arg3 addresses:(id)arg4 consumer:(id)arg5;
- (void)cancelAllAttachmentDownloads;
- (void)_attachmentDownloadDidFinish:(id)arg1;
- (void)cancelDownloadingInstance:(id)arg1 error:(id)arg2;
- (id)beginDownloadingAttachmentWithUUID:(id)arg1 consumer:(id)arg2;
- (void)calendarDirectorySearchIsGoingAway:(id)arg1;
- (void)cancelAllCalendarDirectorySearches;
- (void)cancelCalendarDirectorySearchWithID:(id)arg1;
- (id)performCalendarDirectorySearchForTerms:(id)arg1 recordTypes:(id)arg2 resultLimit:(unsigned long long)arg3 consumer:(id)arg4;
- (void)cancelAllSharingRequests;
- (void)cancelShareResponseInstance:(id)arg1 error:(id)arg2;
- (void)shareResponseIsGoingAway:(id)arg1;
- (id)respondToShareRequestForCalendar:(id)arg1 withResponse:(long long)arg2 consumer:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) DATrustHandler *trustHandler;

@end

