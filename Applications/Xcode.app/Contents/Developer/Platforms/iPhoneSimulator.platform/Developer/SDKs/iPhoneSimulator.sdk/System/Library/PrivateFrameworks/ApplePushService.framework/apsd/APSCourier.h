//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "APSAppLaunchStatsDelegate.h"
#import "APSConnectionServerDelegate.h"
#import "APSCourierConnectionDelegate.h"
#import "APSNetworkMonitorDelegate.h"
#import "APSOutgoingMessageQueueDelegate.h"
#import "APSProxyMasterDelegate.h"
#import "APSProxySlaveDelegate.h"
#import "APSSystemMonitorListener.h"
#import "APSTopicManagerDelegate.h"
#import "PCInterfaceMonitorDelegate.h"

@class APSCourierConnection, APSEnvironment, APSNetworkMonitor, APSOutgoingMessageQueue, APSOutgoingQueue, APSProtocolParser, APSProxyMaster, APSProxySlave, APSPushHistory, APSTopicManager, NSData, NSDate, NSMutableArray, NSMutableDictionary, NSString, NSTimer, PCPersistentTimer;

@interface APSCourier : NSObject <APSTopicManagerDelegate, APSNetworkMonitorDelegate, APSCourierConnectionDelegate, APSConnectionServerDelegate, APSOutgoingMessageQueueDelegate, APSSystemMonitorListener, PCInterfaceMonitorDelegate, APSAppLaunchStatsDelegate, APSProxyMasterDelegate, APSProxySlaveDelegate>
{
    id <APSCourierDelegate> _delegate;
    APSEnvironment *_environment;
    NSMutableArray *_connections;
    struct __SecIdentity *_clientIdentity;
    NSMutableDictionary *_proxySlaves;
    APSProxySlave *_proxySlaveWithOutstandingPresence;
    APSProxyMaster *_proxyMaster;
    APSPushHistory *_pushHistory;
    APSCourierConnection *_courierConnection;
    APSProtocolParser *_protocolParser;
    NSData *_cachedPublicToken;
    _Bool _shouldUseInternet;
    _Bool _shouldRun;
    _Bool _enabled;
    _Bool _enableCriticalReliability;
    NSTimer *_criticalFlushTimer;
    _Bool _useAlternatePort;
    PCPersistentTimer *_pendingMessageReconnectTimer;
    APSNetworkMonitor *_networkMonitor;
    NSString *_lastPushRAT;
    int _lastPushLQ;
    _Bool _isConnectedToService;
    unsigned long long _consecutiveConnectionFailureCount;
    NSDate *_lastConnectionAttempt;
    double _lastClientRequestedKeepaliveTime;
    double _lastLateCriticalOutgoingMessageAcknowledgmentReconnectTime;
    NSMutableDictionary *_connectionPortNamesToConnections;
    NSMutableDictionary *_hashesToEnabledTopics;
    NSMutableDictionary *_hashesToIgnoredTopics;
    NSMutableDictionary *_hashesToOpportunisticTopics;
    APSTopicManager *_topicManager;
    PCPersistentTimer *_criticalReliabilityTimer;
    void *_criticalReliabilityPowerAssertion;
    APSOutgoingMessageQueue *_outgoingMessageQueue;
    APSOutgoingQueue *_tokenRequestQueue;
    double _slowReceiveThreshold;
}

@property(readonly, retain, nonatomic) APSEnvironment *environment; // @synthesize environment=_environment;
@property(nonatomic) _Bool isConnectedToService; // @synthesize isConnectedToService=_isConnectedToService;
- (void)_clearKeepAliveResponseTimerOnInterface:(long long)arg1;
- (void)_startKeepAliveResponseTimerOnInterface:(long long)arg1 shortInterval:(_Bool)arg2;
- (void)_clearConnectionEstablishTimerOnInterface:(long long)arg1;
- (void)_startConnectionEstablishTimerOnInterface:(long long)arg1;
- (_Bool)shouldForceShortTimeouts;
- (void)outgoingMessageQueue:(id)arg1 requestCriticalMessageFlushWithPaddingLength:(unsigned long long)arg2;
- (void)outgoingMessageQueueShortMessageTimeoutExceeded:(id)arg1;
- (void)outgoingMessageQueue:(id)arg1 lateAcknowledgmentForCriticalOutgoingMessage:(id)arg2;
- (void)_handleOutgoingMessageAcknowledgment:(id)arg1 onInterface:(long long)arg2;
- (void)_sendQueuedOutgoingMessages;
- (void)_sendQueuedOutgoingMessagesForTokenState:(id)arg1;
- (void)_sendOutgoingMessage:(id)arg1;
- (void)_handleAppTokenGenerateResponse:(id)arg1 onInterface:(long long)arg2;
- (void)_handleFlushMessage:(id)arg1 onInterface:(long long)arg2;
- (void)_handleKeepAliveResponseMessage:(id)arg1 onInterface:(long long)arg2;
- (void)_performKeepAliveOnInterface:(long long)arg1 shortInterval:(_Bool)arg2;
- (void)_performFlushWithPaddingLength:(unsigned long long)arg1;
- (id)_copyParsedPayload:(id)arg1 messageId:(id *)arg2 errorString:(id *)arg3;
- (void)_handleMessageMessage:(id)arg1 onInterface:(long long)arg2 fromMaster:(_Bool)arg3;
- (void)_notePush;
- (void)_notifyForIncomingMessage:(id)arg1;
- (void)_sendFilterMessageOnInterface:(long long)arg1;
- (void)_forceReconnections;
- (void)_processInvalidIdentity;
- (void)_handleConnectedMessage:(id)arg1 onInterface:(long long)arg2;
- (void)_pendingMessageReconnectTimerFired;
- (void)_handleConnectionFailureOnInterface:(long long)arg1 forceDelayedReconnect:(_Bool)arg2;
- (void)courierConnection:(id)arg1 errorOccured:(id)arg2 onInterface:(long long)arg3;
- (void)courierConnection:(id)arg1 streamEndedOnInterface:(long long)arg2;
- (unsigned long long)courierConnection:(id)arg1 dataReceived:(id)arg2 onInterface:(long long)arg3;
- (void)courierConnectionHasConnected:(id)arg1 onInterface:(long long)arg2;
- (void)courierConnection:(id)arg1 hasDeterminedServerHostname:(id)arg2 onInterface:(long long)arg3;
- (void)courierConnection:(id)arg1 receivedServerBag:(id)arg2;
- (void)courierConnection:(id)arg1 connectionEstablishTimerFiredOnInterface:(long long)arg2;
- (void)courierConnection:(id)arg1 keepAliveResponseTimerFiredOnInterface:(long long)arg2;
- (void)courierConnection:(id)arg1 disconnectStreamOnInterface:(long long)arg2;
- (void)courierConnection:(id)arg1 connectionManager:(id)arg2 handleEvent:(int)arg3 onInterface:(long long)arg4;
- (void)interfaceRadioHotnessChanged:(id)arg1;
- (void)interfaceReachabilityChanged:(id)arg1;
- (void)interfaceLinkQualityChanged:(id)arg1 previousLinkQuality:(int)arg2;
- (void)networkMonitorWiFiBecameAssociated:(id)arg1;
- (void)networkMonitor:(id)arg1 shouldUseDualModeChanged:(_Bool)arg2;
- (void)topicManagerRequestToSendFilter:(id)arg1;
- (void)_logTopics;
- (void)_schedulePendingWorkUpdate;
- (void)_updatePendingWork;
- (void)_processLowPriorityIncomingMessage:(id)arg1;
- (void)_processPendingWorkForTopic:(id)arg1;
- (void)resourceUpdate:(unsigned long long)arg1 withStatus:(unsigned long long)arg2;
- (void)pendingWorkCanProcess:(id)arg1;
- (void)systemDidUnlock;
- (void)systemDidLock;
- (void)_dumpLogsForInconsistencyIfNecessary;
- (void)__dumpLogsForInconsistencyIfNecessary;
- (_Bool)_isWiFiLinkQualityBetter;
- (void)_deleteClientIdentityRequestingReplacement;
- (struct __SecIdentity *)_getClientIdentity;
- (void)_processIdentityChanged;
- (void)_disconnectStreamForInterface:(long long)arg1;
- (void)_disconnectAllStreams;
- (_Bool)_connectStreamWithInterfacePreference:(long long)arg1;
- (void)_adjustConnection;
- (_Bool)_adjustConnectionWithInterfacePreference:(long long)arg1;
@property(readonly, nonatomic) _Bool shouldUseInternet;
- (void)_processShouldUseInternetChangeIfNecessary;
- (_Bool)shouldRun;
- (void)_processShouldRunChangeIfNecessary;
- (void)setEnabled:(_Bool)arg1;
- (void)_processStoredOutgoingMessages;
- (void)_processStoredIncomingMessages;
@property(readonly, nonatomic) double currentKeepAliveInterval; // @dynamic currentKeepAliveInterval;
- (void)setLargeMessageSize:(unsigned long long)arg1;
- (unsigned long long)largeMessageSize;
- (void)setMessageSize:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long messageSize; // @dynamic messageSize;
- (void)setPublicToken:(id)arg1 fromServer:(_Bool)arg2;
@property(readonly, retain, nonatomic) NSData *publicToken; // @dynamic publicToken;
@property(readonly, copy, nonatomic) NSString *ifname;
- (void)_recreateCacheDictionaries;
- (void)_setTopicsForCategory:(long long)arg1;
- (void)_processIsPowerEfficientToSendChange;
- (void)slave:(id)arg1 requestSendOutgoingMessage:(id)arg2;
- (void)slave:(id)arg1 requestPushAckResponse:(id)arg2 messageId:(id)arg3 token:(id)arg4 interface:(id)arg5;
- (void)slaveBecameInactive:(id)arg1;
- (void)requestFilterForSlave:(id)arg1;
- (void)pushTokenBecameInvalidForSlave:(id)arg1;
- (void)proxyMasterReceivedPush:(id)arg1 interface:(id)arg2;
- (void)proxyMasterRequestFilter;
- (void)receivedMessageSize:(id)arg1 largeMessageSize:(id)arg2;
- (void)receivedPushToken:(id)arg1;
- (void)generateCert:(id *)arg1 nonce:(id *)arg2 sig:(id *)arg3 time:(id)arg4;
- (void)_sendSlaveFilter:(id)arg1 onInterface:(long long)arg2;
- (void)_processPendingProxyPresences;
- (void)_clearPendingProxyPresence;
- (void)incomingPresenceWithGuid:(id)arg1 token:(id)arg2 certificate:(id)arg3 nonce:(id)arg4 signature:(id)arg5;
- (void)canUseProxyChanged;
- (unsigned long long)_countConnectedSlaves;
- (unsigned long long)_countActiveSlaves;
- (id)_findSlaveWithToken:(id)arg1;
- (id)_findConnectedSlaveWithToken:(id)arg1 onInterface:(long long)arg2;
- (id)_findActiveSlaveWithToken:(id)arg1;
- (void)periodicSignalFired;
- (void)invalidateDeviceIdentity;
- (void)requestConnectionIfNeeded;
- (void)_criticalReliabilityTimerFired;
- (void)_refreshCriticalReliabilityTimerWithShortKeepAlive:(_Bool)arg1;
- (void)_criticalReliabilityFlushTimerFired;
- (void)_requestKeepAlive:(_Bool)arg1 orConnection:(_Bool)arg2;
- (void)_requestKeepAlive:(_Bool)arg1 orConnection:(_Bool)arg2 shortInterval:(_Bool)arg3 onInterface:(long long)arg4;
- (void)_recalculateCriticalReliability;
- (void)connection:(id)arg1 handleAckIncomingMessageWithGuid:(id)arg2;
- (void)connection:(id)arg1 didInvalidatePerAppTokenForTopic:(id)arg2 identifier:(id)arg3;
- (void)connection:(id)arg1 didRequestPerAppTokenForTopic:(id)arg2 identifier:(id)arg3;
- (void)connection:(id)arg1 didReceiveFakeMessageToSend:(id)arg2;
- (void)connection:(id)arg1 didReceiveCancellationForOutgoingMessageWithID:(unsigned long long)arg2;
- (void)connection:(id)arg1 didReceiveOutgoingMessageToSend:(id)arg2;
- (void)_enqueueMessage:(id)arg1 forOriginator:(id)arg2;
- (void)connectionChangedCriticalReliability:(id)arg1;
- (_Bool)connectionDelegateIsConnectedToService:(id)arg1;
- (_Bool)connectionDelegateHasIdentity:(id)arg1;
- (void)__performIdleCheck;
- (void)_performIdleCheck;
- (void)connectionWasClosed:(id)arg1;
- (void)connectionTopicsChanged:(id)arg1;
- (_Bool)isInternetReachableOnInterface:(long long)arg1;
- (int)linkQualityForInterface:(long long)arg1;
- (unsigned int)connectionTypeForInterface:(long long)arg1;
- (void)removeConnectionForConnectionPortName:(id)arg1;
- (id)connectionForConnectionPortName:(id)arg1;
@property(readonly, nonatomic) _Bool hasIdentity;
- (void)addConnection:(id)arg1;
@property(readonly, copy) NSString *debugDescription;
- (void)dealloc;
- (id)initWithEnvironment:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

