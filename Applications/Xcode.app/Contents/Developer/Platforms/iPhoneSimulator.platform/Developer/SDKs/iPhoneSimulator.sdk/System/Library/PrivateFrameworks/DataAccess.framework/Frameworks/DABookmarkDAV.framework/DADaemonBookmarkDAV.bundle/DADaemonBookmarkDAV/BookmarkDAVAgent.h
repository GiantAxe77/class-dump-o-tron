//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "DACoreDAVAgent.h"

#import "DABookmarkRootFolderConsumer.h"
#import "DABookmarkUpdateConsumer.h"
#import "DADataclassLockWatcher.h"
#import "DARefreshManagerDelegate.h"
#import "DAValidityCheckConsumer.h"

@class DATrustHandler, NSString, NSURL;

@interface BookmarkDAVAgent : DACoreDAVAgent <DABookmarkRootFolderConsumer, DABookmarkUpdateConsumer, DADataclassLockWatcher, DARefreshManagerDelegate, DAValidityCheckConsumer>
{
    _Bool _isSyncing;
    _Bool _isWaitingToSync;
    _Bool _isSyncingHierarchy;
    NSURL *_serverTokenRegistrationURL;
    NSString *_containerPushKey;
}

- (void).cxx_destruct;
- (id)serverTokenRegistrationURL;
- (void)refreshCollections:(id)arg1 withReason:(int)arg2;
- (id)password;
- (id)username;
- (id)watchedCollections;
- (id)onBehalfOfBundleIdentifier;
- (id)scheduleIdentifier;
- (id)waiterID;
- (void)failedToRetrieveRootFolderWithError:(id)arg1;
- (void)successfullyRetrievedRootFolder;
- (void)failedToSyncBookmarkTreeWithError:(id)arg1;
- (void)_handlePotential503Error:(id)arg1;
- (void)successfullySyncedBookmarkTree;
- (void)_setUpPushNotifications;
- (_Bool)APSTopicHasValidPrefix:(id)arg1;
- (void)syncFolderIDs:(id)arg1 forDataclasses:(long long)arg2 isUserRequested:(_Bool)arg3;
- (void)refreshFolderListRequireChangedFolders:(_Bool)arg1 isUserRequested:(_Bool)arg2;
- (void)requestAgentStopMonitoringWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)startMonitoring;
- (_Bool)_hasEnoughDataToSync;
- (void)account:(id)arg1 isValid:(_Bool)arg2 validationError:(id)arg3;
- (void)_tearDownBookmarkNotifications;
- (void)_setUpBookmarkNotifications;
- (void)_validateAndSync:(_Bool)arg1;
- (id)initWithAccount:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) DATrustHandler *trustHandler;

@end

