//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "ML3DatabaseConnectionDelegate.h"
#import "ML3DatabaseConnectionPoolDelegate.h"

@class ML3AccountCacheDatabase, ML3Container, ML3DatabaseConnectionPool, ML3DatabaseMetadata, ML3LibraryNotificationManager, NSArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString;

@interface ML3MusicLibrary : NSObject <ML3DatabaseConnectionDelegate, ML3DatabaseConnectionPoolDelegate>
{
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSString *_libraryUID;
    ML3AccountCacheDatabase *_accountCacheDatabase;
    ML3LibraryNotificationManager *_notificationManager;
    struct iPhoneSortKeyBuilder *_sortKeyBuilder;
    NSMutableDictionary *_optimizedLibraryEntityFilterPredicatesByEntityClass;
    NSMutableDictionary *_optimizedLibraryContainerFilterPredicatesByContainerClass;
    _Bool _isHomeSharingLibraryLoaded;
    _Bool _isHomeSharingLibrary;
    id <ML3MusicLibraryDelegate> _delegate;
    ML3DatabaseConnectionPool *_connectionPool;
    NSString *_databasePath;
    NSArray *_libraryEntityFilterPredicates;
    NSArray *_libraryContainerFilterPredicates;
}

+ (id)_purgeableTrackPredicateWithUrgency:(unsigned long long)arg1;
+ (id)_notInKeepLocalCollectionPredicate;
+ (_Bool)updateTrackIntegrityOnConnection:(id)arg1;
+ (void)enumerateSortMapTablesUsingBlock:(CDUnknownBlockType)arg1;
+ (id)sectionIndexTitleForSectionHeader:(id)arg1;
+ (id)sectionIndexTitles;
+ (id)localizedSectionIndexTitleForSectionHeader:(id)arg1;
+ (id)localizedSectionHeaderForSectionHeader:(id)arg1;
+ (_Bool)deviceSupportsMultipleLibraries;
+ (void)enableAutomaticDatabaseValidation;
+ (void)disableAutomaticDatabaseValidation;
+ (void)disableSharedLibrary;
+ (id)sharedLibraryDatabasePath;
+ (id)sharedLibrary;
+ (_Bool)inTransactionUpdateSearchMapOnConnection:(id)arg1;
+ (_Bool)inTransactionUpdateSortMapOnConnection:(id)arg1 forceUpdateOriginals:(_Bool)arg2;
+ (_Bool)updateSortMapOnConnection:(id)arg1 forceUpdateOriginals:(_Bool)arg2;
+ (_Bool)updateSortMapOnConnection:(id)arg1;
+ (_Bool)dropIndexesUsingConnection:(id)arg1 tableNames:(const char *)arg2;
+ (_Bool)orderingLanguageMatchesSystemUsingConnection:(id)arg1;
+ (_Bool)userVersionMatchesSystemUsingConnection:(id)arg1;
+ (int)userVersionUsingConnection:(id)arg1;
+ (id)itemIndexSchemaSQL;
+ (id)indexSchemaSQL;
+ (id)allTables;
+ (id)allTriggersSQL;
+ (id)allPragmaSQL;
+ (id)allSchemaSQL;
+ (id)itemSchemaSQL;
+ (id)sortMapNewSchemaSQL;
+ (id)sortMapSchemaSQL;
+ (id)storeLinkSchemaSQL;
+ (_Bool)defaultExcludeFromShuffleForMediaType:(unsigned int)arg1;
+ (_Bool)defaultRememberBookmarkTimeForMediaType:(unsigned int)arg1;
+ (id)pathForBaseLocationPath:(long long)arg1;
+ (id)pathForResourceFileOrFolder:(int)arg1 basePath:(id)arg2 relativeToBase:(_Bool)arg3 createParentFolderIfNecessary:(_Bool)arg4;
+ (id)pathForResourceFileOrFolder:(int)arg1;
+ (id)pathForResourceFileOrFolder:(int)arg1 basePath:(id)arg2 relativeToBase:(_Bool)arg3 isFolder:(_Bool *)arg4;
+ (id)controlDirectoryPathWithBasePath:(id)arg1;
+ (id)mediaFolderRelativePath:(id)arg1;
+ (id)mediaFolderPathByAppendingPathComponent:(id)arg1;
+ (id)mediaFolderPath;
+ (id)unitTestableLibraryForTest:(id)arg1 basePath:(id)arg2 setupSQLFilenames:(id)arg3;
+ (id)databasePathForUnitTest:(id)arg1 withBasePath:(id)arg2;
@property(retain, nonatomic) NSArray *libraryContainerFilterPredicates; // @synthesize libraryContainerFilterPredicates=_libraryContainerFilterPredicates;
@property(retain, nonatomic) NSArray *libraryEntityFilterPredicates; // @synthesize libraryEntityFilterPredicates=_libraryEntityFilterPredicates;
@property(readonly, nonatomic) NSString *databasePath; // @synthesize databasePath=_databasePath;
@property(readonly, nonatomic) ML3DatabaseConnectionPool *connectionPool; // @synthesize connectionPool=_connectionPool;
@property(nonatomic) __weak id <ML3MusicLibraryDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_updateDatabaseConnectionsProfilingLevel;
- (void)_postClientNotificationWithDistributedName:(id)arg1 localName:(id)arg2;
- (void)_loggingSettingsDidChangeNotification:(id)arg1;
- (void)_effectiveSettingsDidChangeNotification:(id)arg1;
- (void)_enumeratePurgeableTracksForUrgency:(unsigned long long)arg1 respectSongMattress:(_Bool)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)_allKeepLocalPlaylistTracks;
- (_Bool)_clearAllRowsFromTables:(id)arg1;
- (void)_teardownMediaLibraryDatabaseConnection:(id)arg1;
- (void)_configureMediaLibraryDatabaseConnection:(id)arg1;
- (_Bool)_canConfigureMediaLibraryDatabaseConnection:(id)arg1;
- (id)_newGeniusDBConnectionAtPath:(id)arg1;
- (void)_autogenerateArtworkForRelativePath:(id)arg1 artworkType:(long long)arg2 mediaType:(unsigned int)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_deleteAllArtworkVariantsAtRelativePaths:(id)arg1;
- (_Bool)_insertArtworkRowWithArtworkToken:(id)arg1 artworkType:(long long)arg2 sourceType:(long long)arg3 relativePath:(id)arg4;
- (void)updateTrackIntegrity;
- (void)deletePresignedValidity;
- (_Bool)verifyPresignedValidity;
- (_Bool)hasPresignedValidity;
- (void)migratePresignedValidity;
- (_Bool)deleteDatabaseProperty:(id)arg1;
- (_Bool)setValue:(id)arg1 forDatabaseProperty:(id)arg2;
- (id)valueForDatabaseProperty:(id)arg1;
- (void)removeItemsWithFamilyAccountID:(unsigned long long)arg1 purchaserAccountID:(unsigned long long)arg2 downloaderAccountID:(unsigned long long)arg3;
- (void)removeOrphanedTracks;
- (void)removeTombstonesForDeletedItems;
- (id)fetchArtistHeroArtworkForPersistentID:(long long)arg1 artistType:(long long)arg2;
- (id)fetchChapterArtworkForPersistentID:(long long)arg1 retrievalTime:(double)arg2;
- (id)fetchScreenshotArtworkForPersistentID:(long long)arg1;
- (id)fetchItemArtworkForPersistentID:(long long)arg1;
- (_Bool)hasArtistHeroArtworkForPersistentID:(long long)arg1 artistType:(long long)arg2;
- (_Bool)hasChapterArtworkForPersistentID:(long long)arg1 retrievalTime:(double)arg2;
- (_Bool)hasScreenshotArtworkForPersistentID:(long long)arg1;
- (_Bool)hasItemArtworkForPersistentID:(long long)arg1;
- (_Bool)deleteOrphanedArtworkWithSearchOptions:(long long)arg1 usingConnection:(id)arg2;
- (_Bool)deleteOrphanedArtworkWithSearchOptions:(long long)arg1;
- (_Bool)deleteArtworkWithToken:(id)arg1;
- (_Bool)deleteArtworkWithSourceType:(long long)arg1;
- (_Bool)importOriginalArtworkFromImageData:(id)arg1 withArtworkToken:(id)arg2 artworkType:(long long)arg3 sourceType:(long long)arg4 mediaType:(unsigned int)arg5;
- (_Bool)importOriginalArtworkFromFileURL:(id)arg1 withArtworkToken:(id)arg2 artworkType:(long long)arg3 sourceType:(long long)arg4 mediaType:(unsigned int)arg5;
- (_Bool)importExistingOriginalArtworkWithArtworkToken:(id)arg1 artworkType:(long long)arg2 sourceType:(long long)arg3 mediaType:(unsigned int)arg4;
- (void)autogenerateSupportedSizesForAllOriginalArtworkWithConnection:(id)arg1;
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)arg1 urgency:(unsigned long long)arg2 respectSongMattress:(_Bool)arg3;
- (void)purgeCloudAssets;
- (long long)getDatabaseFileFreeSpace;
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)arg1 urgency:(unsigned long long)arg2;
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)arg1;
- (long long)autoFilledTracksTotalSizeWithUrgency:(unsigned long long)arg1 respectSongMattress:(_Bool)arg2;
- (long long)autoFilledTracksTotalSizeWithUrgency:(unsigned long long)arg1;
@property(readonly, nonatomic) long long autoFilledTracksTotalSize;
- (unsigned long long)countOfChangedPersistentIdsAfterRevision:(long long)arg1 revisionTrackingCode:(unsigned long long)arg2 maximumRevisionType:(int)arg3;
- (_Bool)persistentID:(long long)arg1 changedAfterRevision:(long long)arg2 revisionTrackingCode:(long long)arg3;
- (void)getChangedPersistentIDsAfterRevision:(long long)arg1 revisionTrackingCode:(long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumeratePersistentIDsAfterRevision:(long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumeratePersistentIDsAfterRevision:(long long)arg1 revisionTrackingCode:(unsigned long long)arg2 maximumRevisionType:(int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumeratePersistentIDsAfterRevision:(long long)arg1 revisionTrackingCode:(unsigned long long)arg2 maximumRevisionType:(int)arg3 forMediaTypes:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;
- (_Bool)updateSortMap;
- (long long)addStringToSortMap:(id)arg1;
- (_Bool)requiresNonSchemaUpdatesOnConnection:(id)arg1;
- (_Bool)requiresSchemaOnlyUpdatesOnConnection:(id)arg1;
- (void)savePlaylistsSinceRevision:(long long)arg1 withGrappaID:(unsigned int)arg2;
- (void)savePlaylists;
- (void)saveTrackMetadataSinceRevision:(long long)arg1 withGrappaID:(unsigned int)arg2;
- (void)saveTrackMetadata;
- (void)notifyDisplayValuesPropertyDidChange;
- (void)notifyInvisiblePropertyDidChange;
- (void)notifyNonContentsPropertyDidChange;
- (void)notifyContentsDidChange;
- (unsigned long long)sectionIndexTitleIndexForSectionIndex:(unsigned long long)arg1;
- (id)localizedSectionHeaderForSectionIndex:(unsigned long long)arg1;
- (id)groupingKeysForStrings:(id)arg1;
- (id)groupingKeyForString:(id)arg1;
- (void)accessSortKeyBuilder:(CDUnknownBlockType)arg1;
- (_Bool)populateStaticItemsOfDynamicContainers;
- (id)accountCacheDatabase;
- (_Bool)clearAllGeniusData;
- (_Bool)emptyAllTables;
- (_Bool)dropItemIndexes;
- (_Bool)createIndexes;
- (int)currentDatabaseVersion;
- (_Bool)validateDatabase;
- (_Bool)automaticDatabaseValidationDisabled;
- (_Bool)isCurrentThreadInTransaction;
- (void)performReadOnlyDatabaseTransactionWithBlock:(CDUnknownBlockType)arg1;
- (void)performDatabaseTransactionWithBlock:(CDUnknownBlockType)arg1;
- (void)databaseConnectionAllowingWrites:(_Bool)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)reconnectToDatabase;
- (void)checkInDatabaseConnection:(id)arg1;
- (id)checkoutWriterConnection;
- (id)checkoutReaderConnection;
- (void)connectionPool:(id)arg1 createdNewConnection:(id)arg2;
- (void)connection:(id)arg1 didEndDatabaseTransactionAndCommit:(_Bool)arg2;
- (void)connectionDidBeginDatabaseTransaction:(id)arg1;
- (void)connectionWillCloseDatabase:(id)arg1;
- (void)connectionDidOpenDatabase:(id)arg1;
- (void)connectionWillOpenDatabase:(id)arg1;
- (id)libraryEntityFilterPredicatesForContainerClass:(Class)arg1;
- (id)libraryEntityFilterPredicatesForEntityClass:(Class)arg1;
@property(readonly, nonatomic) _Bool mediaRestrictionEnabled;
@property(readonly, nonatomic) NSArray *preferredSubtitleTracks;
@property(readonly, nonatomic) NSArray *preferredAudioTracks;
@property(readonly, nonatomic) NSArray *localizedSectionIndexTitles;
@property(readonly, nonatomic) ML3DatabaseMetadata *databaseInfo;
@property(readonly, nonatomic) ML3Container *currentDevicePurchasesPlaylist;
- (void)setLibraryUID:(id)arg1;
@property(readonly, nonatomic) NSString *libraryUID;
@property(nonatomic) long long syncGenerationID;
@property(readonly, nonatomic) long long currentContentRevision;
@property(readonly, nonatomic) long long currentRevision;
@property(readonly, nonatomic) long long persistentID;
@property(nonatomic) _Bool isHomeSharingLibrary;
- (void)dealloc;
- (id)initWithPath:(id)arg1 readOnly:(_Bool)arg2 populateUnitTestTablesBlock:(CDUnknownBlockType)arg3;
- (id)initWithPath:(id)arg1;
- (id)artistForArtistName:(id)arg1 seriesName:(id)arg2;
- (id)artistGroupingKeyForArtistName:(id)arg1 seriesName:(id)arg2;
- (id)albumForAlbumArtistPersistentID:(long long)arg1 albumName:(id)arg2 feedURL:(id)arg3 seasonNumber:(id)arg4 compilation:(_Bool)arg5;
- (_Bool)_validateDatabaseUsingConnection:(id)arg1;
- (_Bool)coerceValidDatabase;
- (long long)insertStringIntoSortMapNoTransaction:(id)arg1;
- (id)insertStringsIntoSortMap:(id)arg1;
- (id)insertStringsIntoSortMap:(id)arg1 didReSortMap:(_Bool *)arg2;
- (CDStruct_912cb5d2)nameOrderForString:(id)arg1;
- (id)genreForGenre:(id)arg1;
- (id)composerForComposerName:(id)arg1;
- (id)albumArtistForEffectiveAlbumArtistName:(id)arg1;
- (void)updateOrderingLanguagesForCurrentLanguage;
- (_Bool)updateSystemPlaylistNamesForCurrentLanguage;
- (_Bool)handlePreprocessDatabase;
- (_Bool)handleSchemaUpgrade;
- (_Bool)handleDatabaseValidation;
- (_Bool)populateArtworkCacheWithArtworkData:(id)arg1 trackValues:(id)arg2;
- (void)updateMusicLibraryByApplyingUbiquitousBookmarkMetadataToTrackWithPersistentID:(long long)arg1;
- (void)updateUbiquitousDatabaseByRemovingUbiquitousMetadataFromTrackWithPersistentID:(long long)arg1;
- (id)uppService;
@property(readonly, nonatomic) _Bool supportsUbiquitousPlaybackPositions;
- (_Bool)removeSource:(int)arg1 fromTracksWithPersistentIDs:(id)arg2 usingConnection:(id)arg3;
- (_Bool)removeSource:(int)arg1 fromTracksWithPersistentIDs:(id)arg2;
- (_Bool)removeSource:(int)arg1 usingConnection:(id)arg2;
- (_Bool)removeSource:(int)arg1;
- (_Bool)prepareUnitTestDatabaseWithSQLFromContentsOfFile:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

