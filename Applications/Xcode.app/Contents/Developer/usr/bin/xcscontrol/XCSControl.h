//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class XCSFileLogDestination;

@interface XCSControl : NSObject
{
    XCSFileLogDestination *_fileLogDestination;
}

+ (id)versionString;
+ (id)sharedServiceWithError:(id *)arg1;
+ (void)IDEInitializeOnceAndOnlyOnce;
+ (id)defaultDatabaseURLIncludingDatabaseName;
+ (id)defaultDatabaseURL;
+ (id)couchDesignDocumentsPath;
+ (id)selfSignedCertPrivateKeyPath;
+ (id)selfSignedCertPath;
+ (id)serverCertificateAuthorityPath;
+ (id)clientCertificateAuthorityPath;
+ (id)portalKeychainPassword;
+ (id)portalKeychainSharedSecretPath;
+ (id)portalKeychainPath;
+ (id)repositoriesKeychainPassword;
+ (id)repositoriesKeychainSharedSecretPath;
+ (id)repositoriesKeychainPath;
+ (id)xcsbuilddKeychainPassword;
+ (id)xcsbuilddKeychainSharedSecretPath;
+ (id)xcsbuilddKeychainPath;
+ (id)xcsdKeychainPassword;
+ (id)xcsdKeychainSharedSecretPath;
+ (id)xcsdKeychainPath;
+ (id)debugIdentityPath;
+ (id)debugKeychainPassword;
+ (id)debugKeychainSharedSecretPath;
+ (id)debugKeychainPath;
+ (id)privatePortalDataKeychainPath;
+ (id)privatePortalDataKeychainPassword;
+ (id)privatePortalDataKeychainSharedSecretPath;
+ (id)localPortalConfigurationPlistPath;
+ (id)provisioningProfilesPath;
+ (id)privatePortalKeychainAccessList;
+ (id)hostedRepositoriesPath;
+ (id)v1HostedRepositoriesPath;
+ (id)v1CheckoutCachePath;
+ (id)v1ExportedJSONDataPath;
@property(retain, nonatomic) XCSFileLogDestination *fileLogDestination; // @synthesize fileLogDestination=_fileLogDestination;
- (void).cxx_destruct;
- (id)init;
- (void)setUnitTestingClientCertificateOverride:(struct OpaqueSecIdentityRef *)arg1;
- (void)persistVersionInformationTimerDidFire:(id)arg1;
- (BOOL)startBackgroundDaemonWithError:(id *)arg1;
- (void)stopBuildServiceSessionAndStopMonitoring:(BOOL)arg1;
- (void)startMonitoringBuildServiceSession;
- (id)buildServiceMonitor;
- (BOOL)postServiceShutdownServerAlertWithError:(id *)arg1;
- (id)processCommandFromServerApp:(id)arg1;
- (id)responseForAction:(id)arg1 dictionary:(id)arg2;
- (id)responseForAction:(id)arg1 array:(id)arg2;
- (id)responseForAction:(id)arg1 boolean:(BOOL)arg2;
- (id)responseForUnsupportedAction:(id)arg1;
- (id)responseForAction:(id)arg1 error:(id)arg2;
- (id)responseForAction:(id)arg1 errorString:(id)arg2;
- (BOOL)checkDatabaseRespondingWithRetryAttempts:(long long)arg1 error:(id *)arg2;
- (BOOL)installDesignDocumentWithName:(id)arg1 error:(id *)arg2;
- (id)fetchExistingDesignDocumentRevisionAtURL:(id)arg1;
- (BOOL)initializeDatabaseWithError:(id *)arg1;
- (BOOL)issueClientSSLCertificateForCommonName:(id)arg1 email:(id)arg2 keychain:(id)arg3 password:(id)arg4 applications:(id)arg5 discardPrevious:(BOOL)arg6 withError:(id *)arg7;
- (BOOL)setupServerSSLCertificateAuthorityWithError:(id *)arg1;
- (BOOL)setupClientSSLCertificateAuthorityWithError:(id *)arg1;
- (BOOL)createServerKeychainsWithError:(id *)arg1;
- (BOOL)setExternalIDs:(struct NSArray *)arg1 forACLCategory:(long long)arg2 error:(id *)arg3;
- (struct NSArray *)externalIDsForACLCategory:(long long)arg1 error:(id *)arg2;
- (BOOL)setHostedRepositoryCreatorExternalIDs:(struct NSArray *)arg1 error:(id *)arg2;
- (struct NSArray *)hostedRepositoryCreatorExternalIDsWithError:(id *)arg1;
- (BOOL)setBotViewerExternalIDs:(struct NSArray *)arg1 error:(id *)arg2;
- (struct NSArray *)botViewerExternalIDsWithError:(id *)arg1;
- (BOOL)setBotCreatorExternalIDs:(struct NSArray *)arg1 error:(id *)arg2;
- (struct NSArray *)botCreatorExternalIDsWithError:(id *)arg1;
- (BOOL)removeDebugKeychainAndCertWithError:(id *)arg1;
- (BOOL)createDebugKeychainAndCertWithError:(id *)arg1;
- (BOOL)removeDebugUsersWithError:(id *)arg1;
- (BOOL)createDebugUsersWithError:(id *)arg1;
- (id)generateCSRWithCommonName:(id)arg1 emailAddress:(id)arg2 error:(id *)arg3;
- (id)certificateSerialNumberFromCertificateData:(id)arg1 error:(id *)arg2;
- (id)certificateCommonNameFromCertificateData:(id)arg1 error:(id *)arg2;
- (id)certificateDataForDevelopmentSigningCertificateRequestResponse:(id)arg1;
- (id)certificateDataForIdentityCertificateRequestResponse:(id)arg1 validatingCertificateStatus:(id)arg2;
- (BOOL)requestBackgroundPortalSyncWithError:(id *)arg1;
- (BOOL)_syncProvisioningProfilesForTeamID:(id)arg1 platform:(long long)arg2 clientCertificate:(id)arg3 error:(id *)arg4;
- (BOOL)_syncDevelopmentCertificatesForTeamID:(id)arg1 platform:(long long)arg2 clientCertificate:(id)arg3 error:(id *)arg4;
- (BOOL)_syncPortalForTeam:(id)arg1 error:(id *)arg2;
- (BOOL)syncPortalForTeamID:(id)arg1 error:(id *)arg2;
- (BOOL)syncPortalWithError:(id *)arg1;
- (BOOL)syncPortalInformationForTeamID:(id)arg1 identityCertificateID:(id)arg2 token:(id)arg3 error:(id *)arg4;
- (BOOL)removeDeviceWithPortalDeviceID:(id)arg1 teamID:(id)arg2 platform:(long long)arg3 error:(id *)arg4;
- (BOOL)addDeviceWithDeviceUDID:(id)arg1 name:(id)arg2 teamID:(id)arg3 platform:(long long)arg4 error:(id *)arg5;
- (struct NSArray *)listDevicesForTeamID:(id)arg1 platform:(long long)arg2 token:(id)arg3 error:(id *)arg4;
- (struct NSArray *)listDevicesForTeamID:(id)arg1 platform:(long long)arg2 clientCertificate:(id)arg3 error:(id *)arg4;
- (BOOL)_writeProvisioningProfileDictionariesToDisk:(struct NSArray *)arg1 teamID:(id)arg2 error:(id *)arg3;
- (struct NSArray *)downloadProvisioningProfilesForTeamID:(id)arg1 platform:(long long)arg2 clientCertificate:(id)arg3 retry:(BOOL)arg4 error:(id *)arg5;
- (id)_listAppIDDictionaryKey:(id)arg1 forTeamID:(id)arg2 platform:(long long)arg3 clientCertificate:(id)arg4 error:(id *)arg5;
- (id)listAppIDIdentifiersForTeamID:(id)arg1 platform:(long long)arg2 clientCertificate:(id)arg3 error:(id *)arg4;
- (id)listAppIDNamesForTeamID:(id)arg1 platform:(long long)arg2 clientCertificate:(id)arg3 error:(id *)arg4;
- (id)listAppIDIDsForTeamID:(id)arg1 platform:(long long)arg2 clientCertificate:(id)arg3 error:(id *)arg4;
- (id)listAppIDsForTeamID:(id)arg1 platform:(long long)arg2 clientCertificate:(id)arg3 error:(id *)arg4;
- (id)downloadDevelopmentCertificateForTeamID:(id)arg1 platform:(long long)arg2 clientCertificate:(id)arg3 retry:(BOOL)arg4 error:(id *)arg5;
- (id)requestDownloadAndImportDevelopmentCertificateForTeamID:(id)arg1 platform:(long long)arg2 clientCertificate:(id)arg3 retry:(BOOL)arg4 error:(id *)arg5;
- (id)_downloadClientIdentityCertificateForTeamID:(id)arg1 clientUID:(id)arg2 token:(id)arg3 retry:(BOOL)arg4 validatingCertificateStatus:(id)arg5 error:(id *)arg6;
- (id)downloadClientIdentityCertificateForTeamID:(id)arg1 clientUID:(id)arg2 token:(id)arg3 retry:(BOOL)arg4 error:(id *)arg5;
- (BOOL)_revokeTeamMembershipForTeamID:(id)arg1 token:(id)arg2 error:(id *)arg3;
- (BOOL)revokeTeamMembershipForTeamID:(id)arg1 appleID:(id)arg2 password:(id)arg3 error:(id *)arg4;
- (BOOL)revokeTeamMembershipForTeamID:(id)arg1 error:(id *)arg2;
- (BOOL)cancelJoinTeamRequestForTeamID:(id)arg1 appleID:(id)arg2 password:(id)arg3 error:(id *)arg4;
- (id)_requestAndDownloadTeamIdentityCertificateForTeamID:(id)arg1 token:(id)arg2 error:(id *)arg3;
- (id)_renewTeamMembershipForTeamID:(id)arg1 token:(id)arg2 retry:(BOOL)arg3 error:(id *)arg4;
- (id)renewTeamMembershipForTeamID:(id)arg1 appleID:(id)arg2 password:(id)arg3 retry:(BOOL)arg4 error:(id *)arg5;
- (id)renewTeamMembershipForTeamID:(id)arg1 retry:(BOOL)arg2 error:(id *)arg3;
- (id)joinTeamWithTeamID:(id)arg1 appleID:(id)arg2 password:(id)arg3 error:(id *)arg4;
- (id)_listTeamsForToken:(id)arg1 error:(id *)arg2;
- (id)listTeamsForAppleID:(id)arg1 password:(id)arg2 error:(id *)arg3;
- (id)authenticateWithClientCertificate:(id)arg1 error:(id *)arg2;
- (id)authenticateWithAppleID:(id)arg1 password:(id)arg2 error:(id *)arg3;
- (BOOL)installWWDRCertificatesWithError:(id *)arg1;
- (BOOL)pingPortalWithError:(id *)arg1;
- (BOOL)pingURL:(id)arg1 withError:(id *)arg2;
- (BOOL)createPrivatePortalDataKeychainIfMissing:(id *)arg1;
- (BOOL)removePrivatePortalDataKeychain:(id *)arg1;
- (BOOL)verifyAndAddCertificateDataToPrivatePortalDataKeychain:(id)arg1 withError:(id *)arg2;
- (id)getIdentityCertificateFromPrivatePortalDataKeychainForTeamID:(id)arg1 withError:(id *)arg2;
- (BOOL)updatePortalConfigurationForKnownTeams:(struct NSArray *)arg1 withError:(id *)arg2;
- (BOOL)updatePortalConfigurationRemovingTeamID:(id)arg1 withError:(id *)arg2;
- (BOOL)updatePortalConfigurationAddingKnownTeam:(id)arg1 withError:(id *)arg2;
- (id)knownTeamWithID:(id)arg1 error:(id *)arg2;
- (struct NSArray *)knownTeamsWithError:(id *)arg1;
- (id)knownTeamIDsWithError:(id *)arg1;
- (BOOL)createLocalPortalConfigurationPlistIfMissingWithError:(id *)arg1;
- (id)localPortalConfigurationPlistWithError:(id *)arg1;
- (void)setUnitTestingProvisioningProfilesPathOverride:(id)arg1;
- (void)setUnitTestingPrivatePortalDataKeychainPathOverride:(id)arg1;
- (void)setUnitTestingPrivatePortalDataKeychainSharedSecretOverride:(id)arg1;
- (void)setUnitTestingPortalConfigurationPlistPathOverride:(id)arg1;
- (void)setUnitTestingPrivatePortalKeychainAccessListOverride:(id)arg1;
- (id)_ODHappyPasswordWithError:(id *)arg1;
- (BOOL)_setEnabledClientAccess:(BOOL)arg1 error:(id *)arg2;
- (BOOL)setRevLimit;
- (id)numberOfAvailableCores;
- (BOOL)setERL_FLAGSWithError:(id *)arg1;
- (BOOL)configureEmailTransport:(id)arg1 error:(id *)arg2;
- (void)databaseFragmentationIndex:(id *)arg1 error:(id *)arg2;
- (void)isDatabaseCompactionActive:(char *)arg1 error:(id *)arg2;
- (void)compactDatabaseWithError:(id *)arg1;
- (void)printServerHealthInformationWithError:(id *)arg1;
- (id)currentiOSSDKVersionWithError:(id *)arg1;
- (id)currentOSXSDKVersionWithError:(id *)arg1;
- (id)currentOSXVersionWithError:(id *)arg1;
- (id)currentServerApplicationVersionWithError:(id *)arg1;
- (id)currentXcodeApplicationVersionWithError:(id *)arg1;
- (BOOL)persistServiceVersionInfoWithError:(id *)arg1;
- (BOOL)checkServiceRespondingWithRetryAttempts:(long long)arg1 retryTimeout:(double)arg2 retryDelay:(double)arg3 error:(id *)arg4;
- (void)runCallbackBlock:(CDUnknownBlockType)arg1 whenXcodeApplicationModifiedAtPath:(id)arg2;
- (BOOL)teardownServiceWhenParentXcodeApplicationModifiedWithError:(id *)arg1;
- (BOOL)writeCurrentXcodeApplicationSymlinkForPath:(id)arg1 withError:(id *)arg2;
- (BOOL)writeCurrentXcodeApplicationSymlinkForParentXcodeApplicationPathWithError:(id *)arg1;
- (BOOL)setLaunchDaemonServiceState:(BOOL)arg1 forServiceLabel:(id)arg2 error:(id *)arg3;
- (BOOL)getLaunchDaemonStateForServiceLabel:(id)arg1;
- (BOOL)uninstallSystemLibraryLaunchDaemonForServiceLabel:(id)arg1;
- (BOOL)installSystemLibraryLaunchDaemonForServiceLabel:(id)arg1;
- (BOOL)uninstallNewsyslogdConfigWithError:(id *)arg1;
- (BOOL)installNewsyslogdConfigWithError:(id *)arg1;
- (BOOL)restartLaunchDaemon:(id)arg1 error:(id *)arg2;
- (BOOL)stopLaunchDaemon:(id)arg1 error:(id *)arg2;
- (BOOL)startLaunchDaemon:(id)arg1 error:(id *)arg2;
- (BOOL)configurePath:(id)arg1 withOwner:(id)arg2 group:(id)arg3 permissions:(unsigned long long)arg4 withError:(id *)arg5;
- (BOOL)fixPermissions:(id *)arg1;
- (BOOL)stopLongRunningDaemonsWithError:(id *)arg1;
- (BOOL)startLongRunningDaemonsWithError:(id *)arg1;
- (BOOL)restartLongRunningDaemonsWithError:(id *)arg1;
- (BOOL)stopXCSBuildServiceWithError:(id *)arg1;
- (BOOL)startXCSBuildServiceWithError:(id *)arg1;
- (BOOL)stopXCSRedisWithError:(id *)arg1;
- (BOOL)startXCSRedisWithError:(id *)arg1;
- (BOOL)stopXCSCouchWithError:(id *)arg1;
- (BOOL)startXCSCouchWithError:(id *)arg1;
- (BOOL)stopXCSDWithError:(id *)arg1;
- (BOOL)startXCSDWithError:(id *)arg1;
- (BOOL)disableClientAccessWithError:(id *)arg1;
- (BOOL)enableClientAccessWithError:(id *)arg1;
- (BOOL)stopXCSControlDaemonWithError:(id *)arg1;
- (BOOL)startXCSControlDaemonWithError:(id *)arg1;
- (BOOL)resetServiceWithError:(id *)arg1;
- (BOOL)restartServiceWithError:(id *)arg1;
- (BOOL)shutdownServiceWithError:(id *)arg1;
- (BOOL)initializeSSLInfrastructureWithError:(id *)arg1;
- (BOOL)createBuildServiceUserWithError:(id *)arg1;
- (BOOL)initializeServiceWithError:(id *)arg1;
- (BOOL)preflightServiceWithError:(id *)arg1;
- (BOOL)removeSymlinkAtPath:(id)arg1 error:(id *)arg2;
- (BOOL)symlinkExistsAtPath:(id)arg1;
- (BOOL)createSymlinkAtPath:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
- (BOOL)checkIfUserDataAlreadyExistsAtRootGitSymlinkPath;
- (BOOL)disableHTTPRepositoryAccessWithError:(id *)arg1;
- (BOOL)disableSSHRepositoryAccessWithError:(id *)arg1;
- (BOOL)enableHTTPRepositoryAccessWithError:(id *)arg1;
- (BOOL)enableSSHRepositoryAccessWithError:(id *)arg1;
- (BOOL)httpHostedRepositoriesEnabled;
- (BOOL)sshHostedRepositoriesEnabled;
- (BOOL)sshServiceRunning;
- (BOOL)validateGitRepositoryAtPath:(id)arg1 error:(id *)arg2;
- (BOOL)_validateRepositoryName:(id)arg1 error:(id *)arg2;
- (long long)posixPermissionForGitRepositoryWithName:(id)arg1 error:(id *)arg2;
- (long long)httpAccessTypeForGitRepositoryWithName:(id)arg1 error:(id *)arg2;
- (id)fileSystemAccessForGitRepositoryWithName:(id)arg1 error:(id *)arg2;
- (BOOL)updateHostedGitRepositoryHTTPAccessWithName:(id)arg1 httpAccessType:(long long)arg2 error:(id *)arg3;
- (BOOL)updateHostedGitRepositoryFileSystemAccessWithName:(id)arg1 writeAccessExternalIDs:(id)arg2 readAccessExternalIDs:(id)arg3 posixPermission:(long long)arg4 error:(id *)arg5;
- (id)_loadHostedRepositoryWithName:(id)arg1 error:(id *)arg2;
- (id)listHostedGitRepositoriesWithError:(id *)arg1;
- (BOOL)removeAllHostedGitRepositoriesWithError:(id *)arg1;
- (BOOL)removeHostedGitRepositoryWithName:(id)arg1 error:(id *)arg2;
- (BOOL)createHostedGitRepositoryWithName:(id)arg1 bare:(BOOL)arg2 error:(id *)arg3;
- (BOOL)createHostedGitRepository:(id)arg1 error:(id *)arg2;
- (id)addDotGitExtensionToPath:(id)arg1;
- (id)removeDotGitExtensionFromPath:(id)arg1;
- (void)setUnitTestingHostedRepositoriesPathOverride:(id)arg1;
- (BOOL)setDevelopmentBitOnDeviceWithUUID:(id)arg1 error:(id *)arg2;
- (BOOL)observeAndPersistAvailableDevicesScheduleRunLoop:(BOOL)arg1 timeout:(double)arg2 error:(id *)arg3;
- (struct NSArray *)allDevicesWithError:(id *)arg1;
- (BOOL)createBotForv1BotJSONRepresentation:(id)arg1 notificationsJSONRepresentation:(id)arg2 checkoutCachePath:(id)arg3 error:(id *)arg4;
- (BOOL)createBotsFromExportedv1JSONDataAtPath:(id)arg1 checkoutCachePath:(id)arg2 error:(id *)arg3;
- (BOOL)exportv1JSONDataWithError:(id *)arg1;
- (BOOL)archiveServiceDataFromv1WithError:(id *)arg1;
- (BOOL)migrateHostedRepositoriesFromv1WithError:(id *)arg1;
- (BOOL)migrateServiceSettingsFromv1WithError:(id *)arg1;
- (BOOL)migrateBotDefinitionsFromv1WithError:(id *)arg1;
- (BOOL)migrateFromv1WithError:(id *)arg1;
- (void)setUnitTestingv1HostedRepositoriesPathOverride:(id)arg1;
- (void)setUnitTestingv1CheckoutCachePathOverride:(id)arg1;
- (void)setUnitTestingv1ExportedJSONDataPathOverride:(id)arg1;

@end

