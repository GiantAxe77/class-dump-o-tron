//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "RoleLocalizationsProtocol.h"

@class AbstractElement<LocalesOwnerProtocol>, NSMutableDictionary, NSString;

@interface RoleLocalizations : NSObject <RoleLocalizationsProtocol>
{
    NSString *role;
    NSMutableDictionary *localizationProxies;
    AbstractElement<LocalesOwnerProtocol> *nonRetainedLocalesOwner;
    int roleType;
}

+ (id)uiLocaleNamesForLanguage:(id)arg1;
+ (id)roleLocalizationsForMusicPackage:(id)arg1 withMinimumLocales:(id)arg2;
+ (id)groupRolesIfNeeded:(id)arg1;
+ (id)trackRoleLocalizations:(id)arg1 localeNames:(id)arg2;
+ (id)albumRoleLocalizations:(id)arg1 localeNames:(id)arg2;
+ (BOOL)shouldAddTitleVersionRoleLocalizationsForPackage:(id)arg1;
+ (BOOL)shouldAddTrackRoleLocalizationsForPackage:(id)arg1;
+ (id)artistNameRoleLocalizations:(id)arg1 packageLangauge:(id)arg2 role:(id)arg3 localeNames:(id)arg4;
+ (id)createTitleLocalizationProxiesForModelObject:(id)arg1 packageLanguage:(id)arg2 localeNames:(id)arg3;
+ (id)createTitleVersionLocalizationProxiesForModelObject:(id)arg1 packageLanguage:(id)arg2 localeNames:(id)arg3;
+ (id)createArtistNameLocalizationProxiesForModelObject:(id)arg1 packageLanguage:(id)arg2 localeNames:(id)arg3;
+ (id)createLocalizationProxiesForLocaleName:(id)arg1 roleType:(int)arg2 topLevelObject:(id)arg3;
+ (id)createLocalizationProxiesForTopLevel:(id)arg1 packageLangauage:(id)arg2 roleType:(int)arg3;
+ (BOOL)doesLocaleAllowPhonetic:(id)arg1;
+ (id)uiLocaleNameForModelLocaleName:(id)arg1 isPhoneticTranslation:(BOOL)arg2;
+ (BOOL)canPhoneticTranslationBeAddedForRoleType:(int)arg1;
+ (id)phoneticTopLevelKeyPathForRoleType:(int)arg1;
+ (id)mainTopLevelKeyPathForRoleType:(int)arg1;
+ (id)phoneticLocaleKeyPathForRoleType:(int)arg1;
+ (id)mainLocaleKeyPathForRoleType:(int)arg1;
- (id)allTranslationsString;
- (id)description;
- (void)translationChanged:(id)arg1;
- (BOOL)areLocaleTranslationsEqual:(id)arg1;
- (id)translationForUILocaleName:(id)arg1;
- (id)valueForKey:(id)arg1;
- (void)removeLocalizationForLanguage:(id)arg1;
- (void)addLocalizationForLanguage:(id)arg1;
- (id)existingLocalizationProxiesForLocaleName:(id)arg1;
- (id)localeCodes;
- (id)uiLocaleNames;
- (id)role;
- (void)dealloc;
- (id)initWithRole:(id)arg1 localizationProxies:(id)arg2 localesOwner:(id)arg3 roleType:(int)arg4;

@end

