//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSDictionary, NSMutableDictionary;

@interface ITunesReferenceDataManager : NSObject
{
    NSMutableDictionary *_referenceCache;
    NSMutableDictionary *_languageSpecificSettings;
    NSDictionary *_musicUserInterfaceTags;
    NSMutableDictionary *_cachedLocalizedDtosForKeyAndProvider;
}

+ (void)flushDefaultManager;
+ (id)defaultManager;
+ (void)initialize;
@property(retain) NSMutableDictionary *cachedLocalizedDtosForKeyAndProvider; // @synthesize cachedLocalizedDtosForKeyAndProvider=_cachedLocalizedDtosForKeyAndProvider;
- (id)unlocalizedString:(id)arg1 fromArray:(id)arg2 table:(id)arg3;
- (id)unlocalizedString:(id)arg1 table:(id)arg2;
- (id)localizedArrayForArray:(id)arg1 sorted:(BOOL)arg2 table:(id)arg3;
- (id)localizedBindingsForArray:(id)arg1 sorted:(BOOL)arg2 table:(id)arg3;
- (id)description;
- (id)helpAnchorMapping;
- (id)tagWithMusicUserInterfaceIdentifier:(id)arg1;
- (id)musicAlertableArtistStrings;
- (id)musicUserInterfaceTags;
- (id)allowedTerritoryGroups;
- (id)allowedPreorderTypes;
- (id)allowedExplicitContentTypes;
- (id)musicRingtoneGenreNames;
- (id)musicRingtoneGenres;
- (id)musicAudioToneGenreNames;
- (id)musicAudioToneGenres;
- (id)musicToneTypes;
- (id)musicAudioToneTerritoryNames;
- (id)musicAudioToneTerritories;
- (id)musicAudioToneTerritoriesForProvider:(id)arg1;
- (id)musicRingtoneTerritoryNames;
- (id)musicRingtoneTerritories;
- (id)musicRingtoneTerritoriesForProvider:(id)arg1;
- (id)musicTerritoriesForProvider:(id)arg1;
- (id)musicTerritories;
- (id)musicTrackPriceTiersForProvider:(id)arg1 territory:(id)arg2;
- (id)musicTrackPriceTiersForProvider:(id)arg1;
- (id)musicDefaultTrackPriceTiersForProvider:(id)arg1 territory:(id)arg2;
- (id)musicDefaultTrackPriceTiersForProvider:(id)arg1;
- (id)musicAlbumPriceTiersForProvider:(id)arg1 territory:(id)arg2;
- (id)musicAlbumPriceTiersForProvider:(id)arg1;
- (id)allowedArtistRoles;
- (id)allowedTranslations;
- (id)allowedLocales;
- (id)allowedLanguages;
- (id)allowedTerritories;
- (id)musicTerritoryNames;
- (id)codeWithTranslation:(id)arg1;
- (id)translationWithCode:(id)arg1;
- (id)codeWithPreorderType:(id)arg1;
- (id)preorderTypeWithCode:(id)arg1;
- (id)codeWithTerritory:(id)arg1;
- (id)territoryWithCode:(id)arg1;
- (id)localizedTerritoryWithCode:(id)arg1;
- (id)territoryWithCode:(id)arg1 andKey:(id)arg2;
- (id)territoriesForTerritoryGroup:(id)arg1;
- (id)territoryGroups;
- (id)codeWithGenre:(id)arg1;
- (id)genreWithCode:(id)arg1;
- (BOOL)doesLanguageWithCodeAllowPhonetic:(id)arg1;
- (id)musicLanguageNames;
- (id)codeWithLanguage:(id)arg1;
- (id)languageWithCode:(id)arg1;
- (id)musicGenreNames;
- (id)musicGenres;
- (id)musicLanguages;
- (void)dealloc;
- (id)init;
- (void)initializeDefaultValues;
- (id)localizedDtosForKey:(id)arg1 provider:(id)arg2;
- (id)localizedDtosForKey:(id)arg1;
- (id)cachedObjectForLocalizedKey:(id)arg1 value:(id)arg2;
- (void)cacheAndRotateForKey:(id)arg1 valueKey:(id)arg2;
- (id)valueForCode:(id)arg1 document:(id)arg2;
- (id)cachedObjectForKey:(id)arg1 provider:(id)arg2;
- (id)cachedObjectForKey:(id)arg1 value:(id)arg2;
- (id)cachedObjectForKey:(id)arg1;
- (id)filmTerritoriesForProvider:(id)arg1;
- (id)filmWholesalePriceTiersForProvider:(id)arg1 territory:(id)arg2;
- (id)filmWholesalePriceTiersForProvider:(id)arg1;
- (id)filmTerritoryNames;
- (id)filmTerritories;
- (id)tagWithFilmUserInterfaceIdentifier:(id)arg1;
- (id)filmUserInterfaceTags;
- (id)codeWithFilmVODType:(id)arg1;
- (id)filmVODTypeWithCode:(id)arg1;
- (id)codeWithFilmGenre:(id)arg1;
- (id)filmGenreWithCode:(id)arg1;
- (id)codeWithFilmRating:(id)arg1 system:(id)arg2;
- (id)filmRatingWithCode:(id)arg1 system:(id)arg2;
- (id)codeWithFilmRatingSystem:(id)arg1;
- (id)filmRatingSystemWithCode:(id)arg1;
- (id)codeWithFilmTimeCodeFormat:(id)arg1;
- (id)filmTimeCodeFormatWithCode:(id)arg1;
- (id)codeWithFilmSubtype:(id)arg1;
- (id)filmSubtypeWithCode:(id)arg1;
- (id)allowedFilmRatingsForSystem:(id)arg1;
- (id)filmRatingCodesAndAllowedForSystem:(id)arg1;
- (id)allowedFilmVODTypes;
- (id)allowedFilmRatingSystems;
- (id)allowedFilmSubtypes;
- (id)allowedFilmLocales;
- (id)allowedFilmTimeCodeFormats;
- (id)allowedFilmGenres;
- (id)allowedFilmCountries;
- (id)allowedAssetDataFileAttributes;
- (id)allowedAssetDataFileRoles;
- (id)allowedAssetTypes;
- (id)tagWithAssetOnlyUserInterfaceIdentifier:(id)arg1;
- (id)assetOnlyUserInterfaceTags;
- (id)codeWithAssetOnlyMediaType:(id)arg1;
- (id)assetOnlyMediaTypeWithCode:(id)arg1;
- (id)codeWithAssetOnlyPackageType:(id)arg1;
- (id)assetOnlyPackageTypeWithCode:(id)arg1;
- (id)allowedAssetOnlyMediaTypes;
- (id)allowedAssetOnlyPackageTypes;
- (id)publicationAppliesToVersionWithCode:(id)arg1;
- (id)codeWithPublicationAppliesToVersion:(id)arg1;
- (id)publicationAppliesToVersions;
- (id)publicationTargetAudienceSchemes;
- (id)publicationSubjectWithCode:(id)arg1 scheme:(id)arg2;
- (id)publicationCodeWithPrimarySubject:(id)arg1 subcategory:(id)arg2 scheme:(id)arg3;
- (id)subCategoriesForScheme:(id)arg1 mainCategory:(id)arg2;
- (void)initializePublicationSubCategoryDataWithScheme:(id)arg1;
- (id)mainCategoriesForScheme:(id)arg1;
- (id)publicationSubjectSchemes;
- (id)publicationUserInterfaceIdentifierWithTag:(long long)arg1;
- (id)tagWithPublicationUserInterfaceIdentifier:(id)arg1;
- (id)publicationUserInterfaceTags;
- (id)publicationRelatedProductCodes;
- (id)publicationExplicitContent;
- (id)publicationTerritories;
- (id)publicationBookTypes;
- (id)publicationTypes;
- (id)publicationWholesalePriceTiersForType:(id)arg1 territory:(id)arg2;
- (id)publicationTypesForTerritory:(id)arg1;
- (id)publicationTypesAndWholesalePriceTiersForTerritory:(id)arg1;
- (id)publicationTypesAndWholesalePriceTiers;
- (id)publicationTerritoryNames;
- (id)publicationPublishingStatuses;
- (id)publicationPublisherCodeTypes;
- (id)publicationPublisherRoles;
- (id)publicationContributorRoles;
- (id)publicationContributorRolesForProvider:(id)arg1;
- (id)publicationAdditionalSubjectTypes;
- (id)publicationAdditionalSubjectTypesForProvider:(id)arg1;
- (id)publicationSubjectTypes;
- (id)publicationSubjectTypesForProvider:(id)arg1;
- (id)publicationTitleTypes;
- (id)publicationPrimary;
- (id)publicationTitleTypesForProvider:(id)arg1;
- (id)publicationLanguageWithCode:(id)arg1 returnNilWhenLanguageNotFound:(BOOL)arg2;
- (id)publicationLanguageWithCode:(id)arg1;
- (id)publicationCodeWithLanguage:(id)arg1 returnNilWhenLanguageNotFound:(BOOL)arg2;
- (id)publicationCodeWithLanguage:(id)arg1;
- (id)publicationLanguageNamesSortingLanguagesToTop:(id)arg1 shouldRemoveTopLanguagesCodes:(BOOL)arg2;
- (id)publicationLanguageNames;
- (id)publicationLanguages;
- (id)publicationLanguagesForProvider:(id)arg1;
- (id)publicationProductIdentifiersForProvider:(id)arg1;
- (id)softwareInAppPurchaseTypeNames;
- (id)softwareInAppPurchaseTypes;
- (id)softwareIosInAppPurchaseTypeNames;
- (id)softwareIosInAppPurchaseTypes;
- (id)softwareMacInAppPurchaseTypeNames;
- (id)softwareMacInAppPurchaseTypes;
- (id)softwareTypeNames;
- (id)softwareTypes;
- (id)softwareLanguages;
- (id)wwSoftwareInAppPurchaseMacPriceTiersForIapType:(id)arg1;
- (id)wwSoftwareInAppPurchaseIosPriceTiersForIapType:(id)arg1;
- (id)softwareInAppPurchaseMacPriceTiersForIapType:(id)arg1;
- (id)softwareInAppPurchaseIosPriceTiersForIapType:(id)arg1;
- (id)softwareInAppMacPurchaseTerritoryNames;
- (id)softwareInAppIosPurchaseTerritoryNames;
- (id)softwareInAppPurchaseMonths;
- (id)softwareInAppPurchaseMacTerritories;
- (id)softwareInAppPurchaseIosTerritories;
- (id)tagWithSoftwareInAppPurchaseUserInterfaceIdentifier:(id)arg1;
- (id)softwareInAppPurchaseUserInterfaceTags;
- (id)filmStandardTerritoryGroupNames;
- (id)softwareStandardTerritoryGroupNames;
- (id)publicationStandardTerritoryGroupNames;
- (id)musicStandardTerritoryGroupNames;
- (id)filmStandardTerritoryGroups;
- (id)softwareStandardTerritoryGroups;
- (id)publicationStandardTerritoryGroups;
- (id)musicStandardTerritoryGroups;
- (id)localizedStandardTerritoryGroupForKey:(id)arg1;
- (id)localizeTerritories:(id)arg1;
- (id)allTerritoriesForPackageType:(int)arg1;
- (id)standardTerritoryGroupNamesForPackageType:(int)arg1;
- (id)standardTerritoryGroupsForPackageType:(int)arg1;
- (id)codeWithBaseCurrency:(id)arg1;
- (id)baseCurrencies;
- (id)searchCategoriesForPackageType:(int)arg1;
- (id)musicSearchCategories;
- (id)publicationSearchCategories;

@end

