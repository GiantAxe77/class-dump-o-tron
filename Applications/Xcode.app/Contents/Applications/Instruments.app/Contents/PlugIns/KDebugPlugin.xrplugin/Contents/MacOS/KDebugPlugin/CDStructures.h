//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class NSObject<OS_dispatch_queue>, XRKEventsThread;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double width;
    double height;
};

struct DTKDebugArguments {
    unsigned long long *_field1;
    unsigned char _field2;
};

struct MPOOL;

struct QueryPair;

struct RecordContainerHandle {
    unsigned int _field1;
};

struct XRCategoricalEnclosure {
    unsigned long long _bits[1];
    char _count;
};

struct XREventAggregateInput {
    id _field1;
    struct XRKEventRef *_field2;
    id _field3;
    id _field4;
};

struct XRGraphPoint {
    unsigned long long _field1;
    float _field2;
    void *_field3;
};

struct XRKEventEnclosure {
    struct XRTimeRange _timeRange;
    struct XRCategoricalEnclosure _categorySet;
    struct XRCategoricalEnclosure _threadSet;
};

struct XRKEventIntermediate {
    unsigned long long _field1;
    int _field2;
    unsigned long long _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    CDUnion_f44b072f _field7;
    int _field8;
    unsigned long long _field9[5];
    unsigned int _field10;
    int _field11;
    unsigned long long _field12;
    unsigned int _field13;
};

struct XRKEventRef {
    struct XRTimeRange timeRange;
    unsigned int thread;
    unsigned int category;
    unsigned int cpu;
    unsigned int eventID;
};

struct XRKEventsIndexMemStats {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct XRKEventsIndexStrategy;

struct XRPathAttribute {
    id _field1;
    id _field2;
    double _field3;
    double *_field4;
    double _field5;
    double _field6;
};

struct XRSQLSchemaColumn {
    int _field1;
    char *_field2;
};

struct XRSQLTableDefinition {
    struct __CFString *_field1;
    unsigned char _field2;
    struct XRSQLSchemaColumn _field3[0];
};

struct XRSignpostPointStrategy;

struct XRSpatialIndex<XRKEventsIndexStrategy> {
    struct XRSpatialIndexPagePool *_field1;
    struct XRSpatialIndexPageRef _field2;
    struct XRKEventsIndexStrategy *_field3;
};

struct XRSpatialIndex<XRSignpostPointStrategy> {
    struct XRSpatialIndexPagePool *_pages;
    struct XRSpatialIndexPageRef _root;
    struct XRSignpostPointStrategy *_strat;
};

struct XRSpatialIndexAnonymousPagePool {
    CDUnknownFunctionPointerType *_field1;
    struct vector<void *, std::__1::allocator<void *>> _field2;
    unsigned long long _field3;
};

struct XRSpatialIndexFilePagePool {
    CDUnknownFunctionPointerType *_vptr$XRSpatialIndexPagePool;
    struct MPOOL *_pool;
    unsigned long long _pageSize;
    unsigned long long _cacheSize;
    int _ownedFD;
    unsigned int _pagesCreated;
    unsigned int _pagesRetained;
    NSObject<OS_dispatch_queue> *_lock;
};

struct XRSpatialIndexLeafNode<XRKEventRef> {
    void *_page;
    struct XRSpatialIndexPageRef _pageRef;
    struct XRSpatialIndexPagePool *_pool;
};

struct XRSpatialIndexPagePool;

struct XRSpatialIndexPageRef {
    unsigned int kind:2;
    unsigned int pageNumber:30;
};

struct XRThreadRecommendedAction {
    struct XRThreadTenureValidity _field1;
    struct _XRSchedulingTenure _field2;
    struct _XRSchedulingTenure _field3;
    int _field4;
};

struct XRThreadTenureValidity {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct XRTimeRange {
    unsigned long long start;
    unsigned long long length;
};

struct _CPThread;

struct _CSTypeRef {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _Cursor {
    struct XRKEventEnclosure enclosure;
    struct XRSpatialIndexLeafNode<XRKEventRef> leaf;
    int entry;
    _Bool checkEnclosure;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _XRDeviceTimeInfo {
    unsigned long long _field1;
    unsigned long long _field2;
    struct mach_timebase_info _field3;
};

struct _XRKEventsHistogram {
    struct XRTimeRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    struct _XRKEventsHistogramInterval _field4[0];
};

struct _XRKEventsHistogramInterval {
    float _field1;
    float _field2;
};

struct _XRKEventsIndexPrivate {
    struct XRKEventsIndexStrategy _field1;
    struct XRSpatialIndexAnonymousPagePool _field2;
    struct XRSpatialIndex<XRKEventsIndexStrategy> _field3;
    struct _opaque_pthread_rwlock_t {
        long long _field1;
        char _field2[192];
    } _field4;
};

struct _XRSchedEventModifiedFields {
    unsigned int stateHandle;
    unsigned int totalTimeHandle;
    unsigned int tidHandle;
    unsigned int contextSwitchHandle;
    unsigned int timestampHandle;
    unsigned int reasonHandle;
    unsigned int cpuIndexHandle;
    unsigned int priorityHandle;
};

struct _XRSchedThreadAggStat {
    unsigned int count;
    unsigned long long duration;
    unsigned long long minDuration;
    unsigned long long maxDuration;
};

struct _XRSchedulingTenure {
    int state;
    int priority;
    XRKEventsThread *thread;
    unsigned long long startTime;
    unsigned long long accumulatedTime;
    unsigned int cpu;
    unsigned int marker;
};

struct _XRSignpostEventFields {
    unsigned int timestamp;
    unsigned int eventCode;
    unsigned int pid;
    unsigned int tid;
    unsigned int args;
    unsigned int kind;
    unsigned int userStack;
    unsigned int cpuIndex;
};

struct _XRSignpostPointContainerPrivate {
    struct XRSignpostPointStrategy strat;
    struct XRSpatialIndexFilePagePool pool;
    struct XRSpatialIndex<XRSignpostPointStrategy> idx;
    struct unordered_map<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>, std::__1::hash<XRDatapointClusterType>, std::__1::equal_to<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>>, std::__1::allocator<std::__1::pair<const std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>>> clusterTypes;
};

struct __hash_node<std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, void *>;

struct mach_timebase_info {
    unsigned int _field1;
    unsigned int _field2;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>, std::__1::hash<XRDatapointClusterType>, std::__1::equal_to<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>>, std::__1::allocator<std::__1::pair<const std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, std::__1::__unordered_map_hasher<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, std::__1::hash<XRDatapointClusterType>, true>, std::__1::__unordered_map_equal<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, std::__1::equal_to<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, std::__1::hash<XRDatapointClusterType>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::__hash_value_type<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>, std::__1::unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>>, std::__1::equal_to<std::__1::tuple<unsigned long long, _XRSignpostAnalysisPairingFields, int>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<QueryPair, std::__1::allocator<QueryPair>> {
    struct QueryPair *__begin_;
    struct QueryPair *__end_;
    struct __compressed_pair<QueryPair *, std::__1::allocator<QueryPair>> {
        struct QueryPair *__first_;
    } __end_cap_;
};

struct vector<XRKEventRef, std::__1::allocator<XRKEventRef>> {
    struct XRKEventRef *_field1;
    struct XRKEventRef *_field2;
    struct __compressed_pair<XRKEventRef *, std::__1::allocator<XRKEventRef>> {
        struct XRKEventRef *_field1;
    } _field3;
};

struct vector<void *, std::__1::allocator<void *>> {
    void **_field1;
    void **_field2;
    struct __compressed_pair<void **, std::__1::allocator<void *>> {
        void **_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int count;
    int scale;
} CDStruct_c44245a7;

typedef struct {
    int _field1;
} CDStruct_fcaf9308;

typedef struct {
    CDStruct_fcaf9308 _field1;
    unsigned int _field2;
    unsigned long long *_field3;
    unsigned int _field4;
    unsigned long long *_field5;
    unsigned int _field6;
    unsigned long long *_field7;
    unsigned int _field8;
    unsigned long long *_field9;
} CDStruct_d196afdf;

typedef struct {
    CDStruct_fcaf9308 _field1;
    unsigned long long _field2;
} CDStruct_63ec50cb;

typedef struct {
    CDStruct_fcaf9308 _field1;
    struct _CPThread *_field2;
    int _field3;
    unsigned long long _field4;
    int _field5;
    unsigned long long _field6;
} CDStruct_566df2aa;

typedef struct {
    CDStruct_fcaf9308 _field1;
    CDUnion_f44b072f _field2;
    unsigned int :16;
    unsigned int :16;
    unsigned long long _field3[5];
} CDStruct_e3d99f14;

// Template types
typedef struct vector<XRKEventRef, std::__1::allocator<XRKEventRef>> {
    struct XRKEventRef *_field1;
    struct XRKEventRef *_field2;
    struct __compressed_pair<XRKEventRef *, std::__1::allocator<XRKEventRef>> {
        struct XRKEventRef *_field1;
    } _field3;
} vector_7f1df3cb;

#pragma mark Typedef'd Unions

typedef union {
    unsigned int value;
    struct {
        unsigned int qualifier:2;
        unsigned int code:14;
        unsigned int subclass:8;
        unsigned int classID:8;
    } field;
    struct {
        unsigned int qualifier:2;
        unsigned int msgID:22;
        unsigned int classID:8;
    } migField;
} CDUnion_f44b072f;

