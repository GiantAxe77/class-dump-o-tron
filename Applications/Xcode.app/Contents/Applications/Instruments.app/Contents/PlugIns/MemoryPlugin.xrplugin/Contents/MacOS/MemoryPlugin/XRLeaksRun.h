//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "XRRun.h"

#import "SymbolAwareRun.h"
#import "XRCallTreeDataSource.h"
#import "XRSourceQuery.h"

@class DVT_VMUClassInfoMap, NSArray, NSMapTable, NSMutableArray, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSString, XRBacktraceRepository, XRLeaksReceiver, XRMetadataTagTable, XRObjectAllocRunSharedData;

@interface XRLeaksRun : XRRun <SymbolAwareRun, XRSourceQuery, XRCallTreeDataSource>
{
    XRBacktraceRepository *_repository;
    NSMutableArray *_allLeaks;
    NSMutableArray *_cyclicLeaks;
    CDStruct_fc8fca5f _allReferences;
    DVT_VMUClassInfoMap *_knownLayouts;
    XRObjectAllocRunSharedData *_oaData;
    BOOL _backtracesAvailable;
    BOOL _referencesAvailable;
    NSMapTable *_btAggregatedLeaks;
    NSString *_status;
    struct __CFDictionary *_addressToLeak;
    unsigned long long _latestTimestamp;
    NSArray *_filterTokens;
    BOOL _filterOr;
    struct XRTimeRange _activeTimeRange;
    NSMutableArray *_failedLookups;
    XRLeaksReceiver *_dataReceiver;
    int _pid;
    unsigned int _options;
    BOOL _autoLeaksEnabled;
    unsigned long long _autoLeaksInterval;
    unsigned long long _autoLeaksTriggerTime;
    NSObject<OS_dispatch_source> *_timerSource;
    NSObject<OS_dispatch_queue> *_workerQueue;
    unsigned long long _legacyStartTime;
}

+ (void)initialize;
@property(readonly) BOOL backtracesAvailable; // @synthesize backtracesAvailable=_backtracesAvailable;
@property(readonly) BOOL referencesAvailable; // @synthesize referencesAvailable=_referencesAvailable;
@property(readonly) NSArray *allLeaks; // @synthesize allLeaks=_allLeaks;
@property(readonly) unsigned long long latestTimestamp; // @synthesize latestTimestamp=_latestTimestamp;
@property(nonatomic) unsigned long long autoLeaksInterval; // @synthesize autoLeaksInterval=_autoLeaksInterval;
@property(nonatomic) BOOL autoLeaksEnabled; // @synthesize autoLeaksEnabled=_autoLeaksEnabled;
@property(readonly) NSString *statusString; // @synthesize statusString=_status;
- (BOOL)loadDTPerformanceSessionDataFromPaths:(id)arg1 error:(id *)arg2;
- (id)operation:(id)arg1 commentsForSymbol:(id)arg2 inSourceManager:(id)arg3 callTreeInformation:(id)arg4;
- (void)filterWithTokens:(id)arg1 matchesAny:(BOOL)arg2;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (CDUnknownBlockType)_activeFilter;
- (id)backtracesForCategory:(id)arg1 timeRange:(struct XRTimeRange)arg2 savedIndex:(unsigned long long *)arg3;
- (id)backtraceRepository;
- (void)stopWithReceiverError:(id)arg1;
- (id)eventHistoryForPointer:(unsigned long long)arg1;
- (id)inverseReferencesForLeak:(id)arg1;
- (id)referencesForLeak:(id)arg1;
- (id)infoForIsa:(unsigned long long)arg1;
- (void)_enumerateLeakReferences:(id)arg1 inverse:(BOOL)arg2 withBlock:(CDUnknownBlockType)arg3;
- (id)leakReferenceFromInfo:(CDStruct_0a4d7299)arg1;
- (id)leakWithAddress:(unsigned long long)arg1;
@property(readonly) NSArray *cyclicLeaks;
@property(readonly) NSArray *rootLeaks;
@property(readonly) NSArray *aggregatedLeaks;
@property(readonly) XRMetadataTagTable *pairingTable;
@property(readonly) BOOL historiesAvailable;
- (void)_updateStatusString;
- (void)_calculateReachableSizes;
- (void)_handleNewLeaks:(CDStruct_cbbc06c7 *)arg1 ofCount:(unsigned int)arg2 withContents:(id *)arg3 references:(CDStruct_fc8fca5f)arg4 layouts:(id)arg5 timestamp:(unsigned long long)arg6;
- (void)_aggregateLeakByBacktrace:(id)arg1;
- (void)_assignBacktracesToLeaks:(id)arg1;
- (void)stopRecording;
- (void)requestLeaksCheck;
- (BOOL)recordWithDevice:(id)arg1 pid:(int)arg2 objectAllocInstrument:(id)arg3;
- (void)_armTimer;
@property(nonatomic) BOOL recordLeakContents;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)_commonLeaksRunSetup;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

