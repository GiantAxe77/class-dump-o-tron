//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <DTInstrumentsX/XRUIViewController.h>

#import "NSOutlineViewDataSource.h"
#import "NSOutlineViewDelegate.h"
#import "NSSplitViewDelegate.h"
#import "NSTableViewDataSource.h"
#import "NSTableViewDelegate.h"
#import "XRUIModelChangeObserver.h"

@class NSArray, NSMutableSet, NSOutlineView, NSSearchField, NSSet, NSString, NSTableView, NSView, XRElementSetModel, XRProcessAndThreadListModel, XRThreadPickerSplitView;

@interface XRThreadFilterViewController : XRUIViewController <NSTableViewDelegate, NSTableViewDataSource, NSOutlineViewDelegate, NSOutlineViewDataSource, NSSplitViewDelegate, XRUIModelChangeObserver>
{
    XRElementSetModel *_includedThreads;
    NSArray *_selectedProcessPaths;
    NSArray *_selectedProcessElements;
    int _state;
    NSMutableSet *_retainedPaths;
    NSSet *_selectedThreads;
    NSTableView *_processTable;
    NSOutlineView *_threadOutline;
    NSView *_restrictionView;
    NSSearchField *_textRestrictionFilterView;
    XRThreadPickerSplitView *_splitView;
}

+ (void)initialize;
@property __weak XRThreadPickerSplitView *splitView; // @synthesize splitView=_splitView;
@property __weak NSSearchField *textRestrictionFilterView; // @synthesize textRestrictionFilterView=_textRestrictionFilterView;
@property __weak NSView *restrictionView; // @synthesize restrictionView=_restrictionView;
@property __weak NSOutlineView *threadOutline; // @synthesize threadOutline=_threadOutline;
@property __weak NSTableView *processTable; // @synthesize processTable=_processTable;
@property(retain, nonatomic) NSSet *selectedThreads; // @synthesize selectedThreads=_selectedThreads;
- (void).cxx_destruct;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)_restrictionButtonClick:(id)arg1;
- (void)_textFilterAction:(id)arg1;
- (void)checkAction:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)_executeThreadAction:(SEL)arg1 bySelectingThreads:(id)arg2;
- (void)outlineViewSelectionIsChanging:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (void)tableViewSelectionIsChanging:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)_preprocessTableSelectionChange;
- (void)_processTableSelectionChange;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)_refreshRestrictionButtons;
- (void)fullRedisplay;
- (void)loadView;
- (void)modelDidChange:(id)arg1;
- (id)textFilterString;
- (void)setRestrictionState:(id)arg1;
- (id)restrictionSet;
- (void)_enumerateRestrictionButtons:(CDUnknownBlockType)arg1;
- (id)selectedProcesses;
@property(retain, nonatomic) XRElementSetModel *includedThreads;
@property(retain, nonatomic) XRProcessAndThreadListModel *inputThreadHierarchy;
- (id)nibBundle;
- (id)nibName;
- (void)dealloc;
- (void)refreshProcessTable;
- (void)refreshVisibleThreadBadges;
- (void)updateCellView:(id)arg1 assumingProcessPath:(id)arg2;
- (id)populatedCellViewForTable:(id)arg1 row:(unsigned long long)arg2;
- (unsigned long long)processCount;
- (id)selectedProcessesInTable:(id)arg1;
- (long long)toggleItemsAtIndexPaths:(id)arg1;
- (void)refreshCheckBoxStates;
- (void)reloadThreadOutlineView;
- (id)populatedViewForThreadPath:(id)arg1;
- (long long)numberOfThreadsUnderIndexPath:(id)arg1;
- (id)selectedThreadElementsFromOutline:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

